library(data.table)
library(purrr)
library(scater)
library(ggplot2)
matrix.please<-function(x) {
m<-as.matrix(x[,-1])
rownames(m)<-x[[1]]
m
}
## Define I/O ##
io <- list()
io$expr <- "/Users/ricard/data/NMT-seq/rna/parsed/sceset.rds"
io$metadata.file <- "/Users/ricard/data/NMT-seq/sample_info.txt"
io$outdir <- "/Users/ricard/NMT-seq/heatmap/out"
## Define options ##
opts <- list()
# Define which cells to use
opts$cells <- fread(io$metadata.file) %>% .[pass_rnaQC==T, sample]
# Load sample metadata
sample_metadata <- fread(io$metadata.file) %>% .[sample %in% opts$cells]
# Load expression data and convert to data.table
sce <- readRDS(io$expr)
View(fData(sce))
# Filter genes based on dropout
opts$max.dropout <- 0.25
genes_dropout <- rownames(sce)[fData(sce)$pct_dropout<(opts$max.dropout*100)]
sce_filt <- sce[genes_dropout,opts$cells]
# Filter genes based on variance
# opts$fvar <- 0.5
# genes_var <- names(tail(sort(apply(exprs(sce_filt),1,var)), n=nrow(sce_filt)*opts$fvar))
# sce_filt <- sce_filt[genes_var,opts$cells]
# Filter genes based on biological overdispersion
# opts$fvar <- 0.5
# genes_var <- rownames(sce_filt)[tail(sort(fData(sce_filt)$bioVar, index.return=TRUE)$ix, n=nrow(sce_filt)*opts$fvar)]
# sce_filt <- sce_filt[genes_var,opts$cells]
genes_oversdispersion <- rownames(sce_filt)[fData(sce_filt)$bioVar > 2]
sce_filt <- sce_filt[genes_oversdispersion,opts$cells]
dim(sce_filt)
annotation_row <- data.frame(
row.names = sample_metadata$sample,
culture = sample_metadata$culture
)
# heatmap.2(t(exprs(sce_filt)), col=colorRampPalette(rev(brewer.pal(n = 7, name =
# "RdYlBu")))(100), na.color = "gray95", Rowv=T, Colv=T, density.info="none", trace="none",
#           key=T, labRow = FALSE, labCol = FALSE)
# pdf(paste0(io$outdir,"/heatmap_rna_all.pdf"), width = 6.5, height = 4.5)
pheatmap::pheatmap(t(exprs(sce_filt)),
cluster_rows = T, cluster_cols = T, annotation_row = annotation_row, annotation_col = NA,
show_colnames = F, show_rownames = F)
# dev.off()
annotation_row <- data.frame(
row.names = sample_metadata$sample
)
# heatmap.2(t(exprs(sce_filt)), col=colorRampPalette(rev(brewer.pal(n = 7, name =
# "RdYlBu")))(100), na.color = "gray95", Rowv=T, Colv=T, density.info="none", trace="none",
#           key=T, labRow = FALSE, labCol = FALSE)
# pdf(paste0(io$outdir,"/heatmap_rna_all.pdf"), width = 6.5, height = 4.5)
pheatmap::pheatmap(t(exprs(sce_filt)),
cluster_rows = T, cluster_cols = T, annotation_row = annotation_row, annotation_col = NA,
show_colnames = F, show_rownames = F)
pheatmap::pheatmap(t(exprs(sce_filt)),
cluster_rows = T, cluster_cols = T, annotation_row = NA, annotation_col = NA,
show_colnames = F, show_rownames = F)
pluri <- fread("/Users/ricard/NMT-seq/genesets/pluripotency.tsv", header=F) %>% setnames(c("ens_id","gene")) %>% .[["gene"]]
diff <- fread("/Users/ricard/NMT-seq/genesets/differentiation.tsv", header=F) %>% setnames(c("ens_id","gene")) %>% .[["gene"]]
housek <- fread("/Users/ricard/NMT-seq/genesets/housekeeping.tsv", header=F) %>% setnames(c("ens_id","gene")) %>% .[["gene"]]
feature_df <- data.frame(gene=c(pluri,diff,housek), class=c(rep("Pluripotency",length(pluri)),rep("Differentiation",length(diff)),rep("Housekeeping",length(housek)))) %>% tibble::column_to_rownames("gene")
sample_df <- data.frame(sample=colnames(sce), type=sce$type, culture=sce$culture) %>% tibble::column_to_rownames("sample")
# annotation_colors	<- list(culture=c("red","green"), type=c("blue","orange"), )
pheatmap::pheatmap(t(exprs(sce)[rownames(feature_df),]), border_color="black", main="",
cluster_cols=F, cluster_rows=T, show_rownames=FALSE, show_colnames=FALSE,
annotation_row=sample_df, annotation_col=feature_df, annotation_colors=NA,
legend=TRUE, annotation_legend=TRUE, legend_labels=NA,
annotation_names_col=F, fontsize=13)
pdf(paste0(io$outdir,"/heatmap_rna_unsupervised.pdf"), width = 6.5, height = 4.5)
pdf(paste0(io$outdir,"/heatmap_rna_unsupervised.pdf"), width = 6.5, height = 4.5)
pheatmap::pheatmap(t(exprs(sce_filt)),
cluster_rows = T, cluster_cols = T, annotation_row = NA, annotation_col = NA,
show_colnames = F, show_rownames = F)
dev.off()
pdf(paste0(io$outdir,"/heatmap_rna_supervised.pdf"), width = 6.5, height = 4.5)
pheatmap::pheatmap(t(exprs(sce)[rownames(feature_df),]), border_color="black", main="",
cluster_cols=F, cluster_rows=T, show_rownames=FALSE, show_colnames=FALSE,
annotation_row=sample_df, annotation_col=feature_df, annotation_colors=NA,
legend=TRUE, annotation_legend=TRUE, legend_labels=NA,
annotation_names_col=F, fontsize=13)
dev.off()
annotation_row <- data.frame(
row.names = sample_metadata$sample,
method = sample_metadata$type
)
pdf(paste0(io$outdir,"/heatmap_rna_unsupervised.pdf"), width = 6.5, height = 4.5)
pheatmap::pheatmap(t(exprs(sce_filt)),
cluster_rows = T, cluster_cols = T, annotation_row = NA, annotation_col = NA,
show_colnames = F, show_rownames = F)
dev.off()
feature_df <- data.frame(gene=c(pluri,diff,housek), class=c(rep("Pluripotency",length(pluri)),rep("Differentiation",length(diff)),rep("Housekeeping",length(housek)))) %>% tibble::column_to_rownames("gene")
sample_df <- data.frame(sample=colnames(sce), method=sce$type) %>% tibble::column_to_rownames("sample")
# annotation_colors	<- list(culture=c("red","green"), type=c("blue","orange"), )
pdf(paste0(io$outdir,"/heatmap_rna_supervised.pdf"), width = 6.5, height = 4.5)
pheatmap::pheatmap(t(exprs(sce)[rownames(feature_df),]), border_color="black", main="",
cluster_cols=F, cluster_rows=T, show_rownames=FALSE, show_colnames=FALSE,
annotation_row=sample_df, annotation_col=feature_df, annotation_colors=NA,
legend=TRUE, annotation_legend=TRUE, legend_labels=NA,
annotation_names_col=F, fontsize=13)
dev.off()
annotation_row <- data.frame(
row.names = sample_metadata$sample,
method = sample_metadata$type
)
pdf(paste0(io$outdir,"/heatmap_rna_unsupervised.pdf"), width = 6.5, height = 4.5)
pheatmap::pheatmap(t(exprs(sce_filt)),
cluster_rows = T, cluster_cols = T, annotation_row = annotation_row, annotation_col = NA,
show_colnames = F, show_rownames = F)
dev.off()
library(data.table)
library(purrr)
library(ggplot2)
library(gplots)
library(RColorBrewer)
matrix.please<-function(x) {
m<-as.matrix(x[,-1])
rownames(m)<-x[[1]]
m
}
## I/O ##
io <- list()
io$acc_file  <- "/Users/ricard/data/NMT-seq/acc/parsed/acc_data.tsv.gz"
io$sample.metadata  <- "/Users/ricard/data/NMT-seq/sample_info.txt"
# io$sample.stats  <- "/Users/ricard/NMT-seq/stats/samples/sample_stats.txt"
io$outdir <- "/Users/ricard/NMT-seq/heatmap/out"
## Options ##
opts <- list()
# Define filtering options
opts$min.weight     <- 3      # Minimum weight per feature
opts$min.coverage   <- 0.5    # minimum coverage per feature across samples (methylation)
# Define which annotations to use
opts$annos <- c("prom_2000_2000","active_enhancers","super_enhancers","DHS")
# Define which cells to use
sample_metadata <- fread(io$sample.metadata) %>% .[pass_accQC==T]
opts$cells <- sample_metadata$sample
acc <- fread(sprintf("zcat < %s",io$acc_file)) %>% .[anno%in%opts$annos & sample%in%opts$cells]
stopifnot(length(setdiff(unique(acc$sample),opts$cells))==0)
# By weight
acc <- acc[weight >= opts$min.weight]
# By coverage
# THIS CAN BE OPTIMISED
acc <- acc[, cov:=.N/length(opts$cells), by=c("id","anno")] %>% .[cov >= opts$min.coverage] %>% .[,cov:=NULL]
# By variance
opts$n <- 500
keep_hv_sites <- acc %>% split(.$anno) %>% map(~ .[,.(var = var(rate)), by="id"] %>% setorder(-var) %>% head(n=opts$n) %>% .$id)
acc <- acc %>% split(.$anno) %>% map2(.,names(.), function(x,y) x[id %in% keep_hv_sites[[y]]]) %>% rbindlist
setkey(acc,anno)
dmatrix_list <- list()
for (anno in opts$annos) {
dmatrix_list[[anno]] <- acc[anno,c("id","rate","sample")] %>%
dcast(sample~id, value.var="rate") %>% matrix.please
}
annotation_row <- sample_metadata[,c("sample","method")] %>% as.data.frame %>%
tibble::column_to_rownames("sample")
for (anno in opts$annos) {
pdf(paste0(io$outdir,"/heatmap_acc_",anno,".pdf"))
# png(paste0(io$outdir,"/heatmap_acc_",anno,".png"))
pheatmap::pheatmap(dmatrix_list[[anno]], main=anno,
cluster_rows = T, cluster_cols = T, annotation_row = annotation_row, annotation_col = NA,
show_colnames = F, show_rownames = F)
# heatmap.2(dmatrix_list[[anno]], col=colorRampPalette(rev(brewer.pal(n = 7, name =
# "RdYlBu")))(100), na.color = "gray95", Rowv=T, Colv=T, density.info="none", trace="none",
#           key=T, labRow = FALSE, labCol = FALSE)
dev.off()
}
library(data.table)
library(purrr)
library(ggplot2)
library(gplots)
library(RColorBrewer)
matrix.please<-function(x) {
m<-as.matrix(x[,-1])
rownames(m)<-x[[1]]
m
}
## I/O ##
io <- list()
io$acc_file  <- "/Users/ricard/data/NMT-seq/acc/parsed/acc_data.tsv.gz"
io$sample.metadata  <- "/Users/ricard/data/NMT-seq/sample_info.txt"
# io$sample.stats  <- "/Users/ricard/NMT-seq/stats/samples/sample_stats.txt"
io$outdir <- "/Users/ricard/NMT-seq/heatmap/out"
## Options ##
opts <- list()
# Define filtering options
opts$min.weight     <- 3      # Minimum weight per feature
opts$min.coverage   <- 0.5    # minimum coverage per feature across samples (methylation)
# Define which annotations to use
opts$annos <- c("prom_2000_2000","active_enhancers","super_enhancers","DHS")
# Define which cells to use
sample_metadata <- fread(io$sample.metadata) %>% .[pass_accQC==T]
opts$cells <- sample_metadata$sample
acc <- fread(sprintf("zcat < %s",io$acc_file)) %>% .[anno%in%opts$annos & sample%in%opts$cells]
stopifnot(length(setdiff(unique(acc$sample),opts$cells))==0)
# By weight
acc <- acc[weight >= opts$min.weight]
# By coverage
# THIS CAN BE OPTIMISED
acc <- acc[, cov:=.N/length(opts$cells), by=c("id","anno")] %>% .[cov >= opts$min.coverage] %>% .[,cov:=NULL]
# By variance
opts$n <- 500
keep_hv_sites <- acc %>% split(.$anno) %>% map(~ .[,.(var = var(rate)), by="id"] %>% setorder(-var) %>% head(n=opts$n) %>% .$id)
acc <- acc %>% split(.$anno) %>% map2(.,names(.), function(x,y) x[id %in% keep_hv_sites[[y]]]) %>% rbindlist
setkey(acc,anno)
dmatrix_list <- list()
for (anno in opts$annos) {
dmatrix_list[[anno]] <- acc[anno,c("id","rate","sample")] %>%
dcast(sample~id, value.var="rate") %>% matrix.please
}
# annotation_row <- sample_metadata[,c("sample","method")] %>% as.data.frame %>%
#   tibble::column_to_rownames("sample")
for (anno in opts$annos) {
pdf(paste0(io$outdir,"/heatmap_acc_",anno,".pdf"))
# png(paste0(io$outdir,"/heatmap_acc_",anno,".png"))
pheatmap::pheatmap(dmatrix_list[[anno]], main=anno,
cluster_rows = T, cluster_cols = T, annotation_row = NA, annotation_col = NA,
show_colnames = F, show_rownames = F)
# heatmap.2(dmatrix_list[[anno]], col=colorRampPalette(rev(brewer.pal(n = 7, name =
# "RdYlBu")))(100), na.color = "gray95", Rowv=T, Colv=T, density.info="none", trace="none",
#           key=T, labRow = FALSE, labCol = FALSE)
dev.off()
}
