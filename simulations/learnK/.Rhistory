)
ggplot(dt, aes(x=na, y=infered_k)) +
geom_bar(aes(group = trial, fill=na), position = "dodge", stat="identity", color="black") +
geom_hline(yintercept = 10, color="black", size=0.6, linetype="solid") +
labs(x="Fraction of missing values", y="Number of factors") +
scale_y_continuous(limits=c(0,15),breaks=c(5,10,15)) +
scale_x_continuous(limits=c(-0.01,0.91), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9)) +
theme_fn() +
theme(
axis.text.x=element_text(colour="black",size=rel(1.5), angle=90, vjust = 0.5, hjust=0.5)
)
ggplot(dt, aes(x=na, y=infered_k)) +
geom_bar(aes(group = trial, fill=na), position = "dodge", stat="identity", color="black") +
geom_hline(yintercept = 10, color="black", size=0.6, linetype="solid") +
labs(x="Fraction of missing values", y="Number of factors") +
scale_y_continuous(limits=c(0,15),breaks=c(5,10,15)) +
scale_x_continuous(limits=c(-0.02,0.92), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9)) +
theme_fn() +
theme(
axis.text.x=element_text(colour="black",size=rel(1.5), angle=90, vjust = 0.5, hjust=0.5)
)
ggplot(dt, aes(x=na, y=infered_k)) +
geom_bar(aes(group = trial, fill=na), position = "dodge", stat="identity", color="black") +
geom_hline(yintercept = 10, color="black", size=0.6, linetype="solid") +
labs(x="Fraction of missing values", y="Number of factors") +
scale_y_continuous(limits=c(0,15),breaks=c(5,10,15)) +
scale_x_continuous(limits=c(-0.03,0.93), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9)) +
theme_fn() +
theme(
axis.text.x=element_text(colour="black",size=rel(1.5), angle=90, vjust = 0.5, hjust=0.5)
)
pdf("/Users/ricard/CLL/simulations/learnK/out/NA.pdf")
print(p)
p <- ggplot(dt, aes(x=na, y=infered_k)) +
geom_bar(aes(group = trial, fill=na), position = "dodge", stat="identity", color="black") +
geom_hline(yintercept = 10, color="black", size=0.6, linetype="solid") +
labs(x="Fraction of missing values", y="Number of factors") +
scale_y_continuous(limits=c(0,15),breaks=c(5,10,15)) +
scale_x_continuous(limits=c(-0.03,0.93), breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9)) +
theme_fn() +
theme(
axis.text.x=element_text(colour="black",size=rel(1.5), angle=90, vjust = 0.5, hjust=0.5)
)
pdf("/Users/ricard/CLL/simulations/learnK/out/NA.pdf")
print(p)
dev.off()
pdf("/Users/ricard/CLL/simulations/learnK/out/NA.pdf", width = 5, height = 4)
print(p)
print(p)
dev.off()
pdf("/Users/ricard/CLL/simulations/learnK/out/NA.pdf", width = 5, height = 4)
print(p)
dev.off()
pdf("/Users/ricard/CLL/simulations/learnK/out/NA.pdf", width = 6, height = 4)
print(p)
dev.off()
pdf("/Users/ricard/CLL/simulations/learnK/out/NA.pdf", width = 7, height = 4)
print(p)
dev.off()
in.folder <- "/Users/ricard/data/MOFA/simulations/results/M"
files <- list.files(in.folder, pattern=".hdf5$")
models <- list()
for (i in 1:length(files)) {
split <- strsplit(files[i],"_")[[1]]
m <- split[1]
trial <- substr(split[[2]],1,nchar(split[[2]])-5)
models[[paste(m,trial,sep="_")]] <- loadModel(paste0(in.folder,"/",files[i]))
}
in.folder <- "/Users/ricard/data/MOFA/simulations/results/learnK/M"
files <- list.files(in.folder, pattern=".hdf5$")
models <- list()
for (i in 1:length(files)) {
split <- strsplit(files[i],"_")[[1]]
m <- split[1]
trial <- substr(split[[2]],1,nchar(split[[2]])-5)
models[[paste(m,trial,sep="_")]] <- loadModel(paste0(in.folder,"/",files[i]))
}
dt <- data.table(
infered_k = sapply(models, function(x) tail(x@TrainStats$activeK,1) ),
M = as.numeric(sapply(strsplit(names(models),"_"),"[[",1)),
trial = as.numeric(sapply(strsplit(names(models),"_"),"[[",2))
)
p <- ggplot(dt, aes(x=M, y=infered_k)) +
# geom_point(size=0.5) +
# geom_bar(aes(fill=trial), stat="identity", fill="red", alpha=0.5) +
geom_bar(aes(group = trial, fill=M), position = "dodge", stat="identity", color="black") +
geom_hline(yintercept = 10, color="black", size=0.6, linetype="solid") +
labs(x="Number of views", y="Number of factors") +
scale_y_continuous(limits=c(0,15),breaks=c(5,10,15)) +
scale_x_continuous(limits=c(0,16), breaks=c(1,3,5,7,9,11,13,15)) +
theme_fn() +
theme(
axis.text.x=element_text(colour="black",size=rel(1.5), angle=90, vjust = 0.5, hjust=0.5)
)
theme_fn <- function() {
theme(
# plot.title = element_text(size=titlesize),
plot.margin = margin(10,10,10,10),
axis.title.x=element_text(colour="black",size=rel(1.75), margin=margin(20,0,3,0)),
axis.title.y=element_text(colour="black",size=rel(1.75), margin=margin(0,20,0,3)),
axis.text.x=element_text(colour="black",size=rel(1.5)),
axis.text.y=element_text(colour="black",size=rel(1.5)),
axis.ticks.x = element_line(colour="black"),
axis.ticks.y = element_line(colour="black"),
axis.line.x = element_line(color="black"),
axis.line.y = element_line(color="black"),
legend.position="none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()
)
}
p <- ggplot(dt, aes(x=M, y=infered_k)) +
# geom_point(size=0.5) +
# geom_bar(aes(fill=trial), stat="identity", fill="red", alpha=0.5) +
geom_bar(aes(group = trial, fill=M), position = "dodge", stat="identity", color="black") +
geom_hline(yintercept = 10, color="black", size=0.6, linetype="solid") +
labs(x="Number of views", y="Number of factors") +
scale_y_continuous(limits=c(0,15),breaks=c(5,10,15)) +
scale_x_continuous(limits=c(0,16), breaks=c(1,3,5,7,9,11,13,15)) +
theme_fn() +
theme(
axis.text.x=element_text(colour="black",size=rel(1.5), angle=90, vjust = 0.5, hjust=0.5)
)
print(p)
i
length(files)
split <- strsplit(files[i],"_")[[1]]
m <- split[1]
trial <- substr(split[[2]],1,nchar(split[[2]])-5)
models[[paste(m,trial,sep="_")]] <- loadModel(paste0(in.folder,"/",files[i]))
files[i]
in.folder <- "/Users/ricard/data/MOFA/simulations/results/learnK/M"
files <- list.files(in.folder, pattern=".hdf5$")
models <- list()
for (i in 1:length(files)) {
split <- strsplit(files[i],"_")[[1]]
m <- split[1]
trial <- substr(split[[2]],1,nchar(split[[2]])-5)
models[[paste(m,trial,sep="_")]] <- loadModel(paste0(in.folder,"/",files[i]))
}
dt <- data.table(
infered_k = sapply(models, function(x) tail(x@TrainStats$activeK,1) ),
M = as.numeric(sapply(strsplit(names(models),"_"),"[[",1)),
trial = as.numeric(sapply(strsplit(names(models),"_"),"[[",2))
)
p <- ggplot(dt, aes(x=M, y=infered_k)) +
# geom_point(size=0.5) +
# geom_bar(aes(fill=trial), stat="identity", fill="red", alpha=0.5) +
geom_bar(aes(group = trial, fill=M), position = "dodge", stat="identity", color="black") +
geom_hline(yintercept = 10, color="black", size=0.6, linetype="solid") +
labs(x="Number of views", y="Number of factors") +
scale_y_continuous(limits=c(0,15),breaks=c(5,10,15)) +
scale_x_continuous(limits=c(0,16), breaks=c(1,3,5,7,9,11,13,15)) +
theme_fn() +
theme(
axis.text.x=element_text(colour="black",size=rel(1.5), angle=90, vjust = 0.5, hjust=0.5)
)
print(p)
# pdf("/Users/ricard/CLL/simulations/learnK/out/M.pdf", width = 7, height = 4)
# print(p)
# dev.off()
devtools::load_all("/Users/ricard/mofa/MOFAtools")
library(MOFAtools)
library(data.table)
library(purrr)
library(ggplot2)
theme_fn <- function() {
theme(
# plot.title = element_text(size=titlesize),
plot.margin = margin(10,10,10,10),
axis.title.x=element_text(colour="black",size=rel(1.75), margin=margin(20,0,3,0)),
axis.title.y=element_text(colour="black",size=rel(1.75), margin=margin(0,20,0,3)),
axis.text.x=element_text(colour="black",size=rel(1.5)),
axis.text.y=element_text(colour="black",size=rel(1.5)),
axis.ticks.x = element_line(colour="black"),
axis.ticks.y = element_line(colour="black"),
axis.line.x = element_line(color="black"),
axis.line.y = element_line(color="black"),
legend.position="none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()
)
}
in.folder <- "/Users/ricard/data/MOFA/simulations/results/D"
files <- list.files(in.folder, pattern=".hdf5$")
models <- list()
for (i in 1:length(files)) {
split <- strsplit(files[i],"_")[[1]]
d <- split[1]
trial <- substr(split[[2]],1,nchar(split[[2]])-5)
models[[paste(d,trial,sep="_")]] <- loadModel(paste0(in.folder,"/",files[i]))
}
dt <- data.table(
infered_k = sapply(models, function(x) tail(x@TrainStats$activeK,1) ),
D = as.numeric(sapply(strsplit(names(models),"_"),"[[",1)),
# D = as.factor(sapply(strsplit(names(models),"_"),"[[",1)),
trial = as.numeric(sapply(strsplit(names(models),"_"),"[[",2))
) %>% .[,D:=factor(D,levels=sort(unique(D)))]
# ggplot(dt, aes(x=D, y=infered_k, group=D)) +
#   # geom_point(size=0.5) +
#   geom_boxplot(fill="red", alpha=0.5) +
#   # geom_abline(slope=0, intercept=0, alpha=0.5) +
#   labs(x="Number of dimensions", y="Number of infered factors") +
#   scale_y_continuous(limits=c(5,15), breaks=c(5,10,15)) +
#   # scale_x_continuous(limits=c(5,51), breaks=c(5,10,15,20,25,30,35,40,45,50)) +
#   theme_fn()
ggplot(dt, aes(x=D, y=infered_k)) +
# geom_point(size=0.5) +
# geom_bar(aes(fill=trial), stat="identity", fill="red", alpha=0.5) +
geom_bar(aes(group = trial, fill=D), position = "dodge", stat="identity", color="black") +
geom_hline(yintercept = 10, color="black", size=0.6, linetype="solid") +
labs(x="Number of dimensions", y="Number of infered factors") +
scale_y_continuous(limits=c(0,15),breaks=c(5,10,15)) +
# scale_x_continuous(limits=c(5,51), breaks=c(5,10,15,20,25,30,35,40,45,50)) +
theme_fn() +
theme(
axis.text.x=element_text(colour="black",size=rel(1.5), angle=90, vjust = 0.5)
)
print(p)
in.folder <- "/Users/ricard/data/MOFA/simulations/results/learnK/M"
files <- list.files(in.folder, pattern=".hdf5$")
models <- list()
for (i in 1:length(files)) {
split <- strsplit(files[i],"_")[[1]]
m <- split[1]
trial <- substr(split[[2]],1,nchar(split[[2]])-5)
models[[paste(m,trial,sep="_")]] <- loadModel(paste0(in.folder,"/",files[i]))
}
i
files[i]
for (i in 29:length(files)) {
split <- strsplit(files[i],"_")[[1]]
m <- split[1]
trial <- substr(split[[2]],1,nchar(split[[2]])-5)
models[[paste(m,trial,sep="_")]] <- loadModel(paste0(in.folder,"/",files[i]))
for (i in 1:length(files)) {
split <- strsplit(files[i],"_")[[1]]
m <- split[1]
trial <- substr(split[[2]],1,nchar(split[[2]])-5)
models[[paste(m,trial,sep="_")]] <- loadModel(paste0(in.folder,"/",files[i]))
}
}
names(models)
p <- ggplot(dt, aes(x=M, y=infered_k)) +
# geom_point(size=0.5) +
# geom_bar(aes(fill=trial), stat="identity", fill="red", alpha=0.5) +
geom_bar(aes(group = trial, fill=M), position = "dodge", stat="identity", color="black") +
geom_hline(yintercept = 10, color="black", size=0.6, linetype="solid") +
labs(x="Number of views", y="Number of factors") +
scale_y_continuous(limits=c(0,15),breaks=c(5,10,15)) +
scale_x_continuous(limits=c(0,16), breaks=c(1,3,5,7,9,11,13,15)) +
theme_fn() +
theme(
axis.text.x=element_text(colour="black",size=rel(1.5), angle=90, vjust = 0.5, hjust=0.5)
)
print(p)
dt <- data.table(
infered_k = sapply(models, function(x) tail(x@TrainStats$activeK,1) ),
M = as.numeric(sapply(strsplit(names(models),"_"),"[[",1)),
trial = as.numeric(sapply(strsplit(names(models),"_"),"[[",2))
)
p <- ggplot(dt, aes(x=M, y=infered_k)) +
# geom_point(size=0.5) +
# geom_bar(aes(fill=trial), stat="identity", fill="red", alpha=0.5) +
geom_bar(aes(group = trial, fill=M), position = "dodge", stat="identity", color="black") +
geom_hline(yintercept = 10, color="black", size=0.6, linetype="solid") +
labs(x="Number of views", y="Number of factors") +
scale_y_continuous(limits=c(0,15),breaks=c(5,10,15)) +
scale_x_continuous(limits=c(0,16), breaks=c(1,3,5,7,9,11,13,15)) +
theme_fn() +
theme(
axis.text.x=element_text(colour="black",size=rel(1.5), angle=90, vjust = 0.5, hjust=0.5)
)
print(p)
names(models)
in.folder <- "/Users/ricard/data/MOFA/simulations/results/learnK/M"
files <- list.files(in.folder, pattern=".hdf5$")
models <- list()
for (i in 1:length(files)) {
split <- strsplit(files[i],"_")[[1]]
m <- split[1]
trial <- substr(split[[2]],1,nchar(split[[2]])-5)
models[[paste(m,trial,sep="_")]] <- loadModel(paste0(in.folder,"/",files[i]))
}
dt <- data.table(
infered_k = sapply(models, function(x) tail(x@TrainStats$activeK,1) ),
M = as.numeric(sapply(strsplit(names(models),"_"),"[[",1)),
trial = as.numeric(sapply(strsplit(names(models),"_"),"[[",2))
)
p <- ggplot(dt, aes(x=M, y=infered_k)) +
# geom_point(size=0.5) +
# geom_bar(aes(fill=trial), stat="identity", fill="red", alpha=0.5) +
geom_bar(aes(group = trial, fill=M), position = "dodge", stat="identity", color="black") +
geom_hline(yintercept = 10, color="black", size=0.6, linetype="solid") +
labs(x="Number of views", y="Number of factors") +
scale_y_continuous(limits=c(0,15),breaks=c(5,10,15)) +
scale_x_continuous(limits=c(0,16), breaks=c(1,3,5,7,9,11,13,15)) +
theme_fn() +
theme(
axis.text.x=element_text(colour="black",size=rel(1.5), angle=90, vjust = 0.5, hjust=0.5)
)
print(p)
# pdf("/Users/ricard/CLL/simulations/learnK/out/M.pdf", width = 7, height = 4)
# print(p)
# dev.off()
mrna <- readRDS("/Users/ricard/data/TCGA-LIHC/processed/mRNA.rds")
mrna
View(rowData(mrna))
View(colData(mrna))
library(SummarizedExperiment)
View(colData(mrna))
View(rowData(mrna))
View(assayData(mrna))
assayData(mrna)
class(assays(mrna))
View(rowRanges(mrna))
View(assays(mrna)[[1]])
gene_metadata <- read.csv("/Users/ricard/data/ensembl/human/v87/BioMart/mRNA/Hsapiens_genes_BioMart.87.txt", header=T, sep="\t", stringsAsFactors=F)
View(gene_metadata)
colnames(colData(mrna))
rownames(rowData(mrna))
colnames(rowData(mrna))
gene_metadata$symbol %in% rowData(mrna)$external_gene_name
mrna[,gene_metadata$symbol]
mrna_filt <- mrna[gene_metadata$symbol[gene_metadata$symbol %in% rowData(mrna)$external_gene_name],]
gene_metadata$symbol[gene_metadata$symbol %in% rowData(mrna)$external_gene_name]
mrna[1:3,1:3]
mrna[c(TRUE,FALSE,TRUE)]
gene_metadata <- fread("/Users/ricard/data/ensembl/human/v87/BioMart/mRNA/Hsapiens_genes_BioMart.87.txt", header=T, sep="\t", stringsAsFactors=F)
View(gene_metadata)
gene_metadata <- fread("/Users/ricard/data/ensembl/human/v87/BioMart/mRNA/Hsapiens_genes_BioMart.87.txt", header=T, sep="\t", stringsAsFactors=F) %>%
.[symbol %in% rowData(mrna)$external_gene_name]
mrna_filt <- mrna[rowData(mrna)$external_gene_name %in% gene_metadata$symbol,]
dim(mra_filt)
dim(mrna_filt)
library(scater)
class(rowData(mrna_filt))
head(rowData(mrna_filt))
fdata <- rowData(mrna_filt)[,c("ensembl_gene_id","external_gene_name")] %>% tibble::column_to_rownames("external_gene_name") %>% new(Class = "AnnotatedDataFrame")
fdata <- rowData(mrna_filt)[,c("ensembl_gene_id","external_gene_name")] %>% as.data.frame %>% tibble::column_to_rownames("external_gene_name") %>% new(Class = "AnnotatedDataFrame")
head(mrna_filt[!duplicated(rowData(mrna)$external_gene_name),])
duplicated(rowData(mrna)$external_gene_name)
!duplicated(rowData(mrna)$external_gene_name)
mrna_filt <- mrna_filt[!duplicated(rowData(mrna_filt)$external_gene_name),]
fdata <- rowData(mrna_filt)[,c("ensembl_gene_id","external_gene_name")] %>% as.data.frame %>% tibble::column_to_rownames("external_gene_name") %>% new(Class = "AnnotatedDataFrame")
head(colData(mrna_filt) %>% as.data.frame )
pdata <- colData(mrna_filt) %>% as.data.frame %>% new(Class = "AnnotatedDataFrame")
sce = newSCESet(countData = assays(mrna_filt)[[1]], phenoData = pdata, featureData = fdata)
rownames(assays(mrna_filt)[[1]])
rownames(cdata) <- rownames(fData)
rownames(fData)
rownames(fdata)
cdata <- assays(mrna_filt)[[1]]
rownames(cdata) <- rownames(fdata)
sce = newSCESet(countData = cdata, phenoData = pdata, featureData = fdata)
plotPCA(sce)
# Create featureData
fdata <- rowData(mrna_filt)[,c("ensembl_gene_id","external_gene_name")] %>% as.data.frame %>% tibble::column_to_rownames("external_gene_name") %>% new(Class = "AnnotatedDataFrame")
# Create phenoData
pdata <- colData(mrna_filt) %>% as.data.frame %>% new(Class = "AnnotatedDataFrame")
# Create exprsData
edata <- assays(mrna_filt)[[1]]
rownames(edata) <- rownames(fdata)
# create SCEset object
sce = newSCESet(exprsData = edata, phenoData = pdata, featureData = fdata)
View(expr(sce))
View(exprs(sce))
apply(exprs(sce), 1, mean)
plot(
x=apply(exprs(sce), 1, mean),
y=apply(exprs(sce), 1, var)
)
hist(exprs(sce))
cnv <- readRDS("/Users/ricard/data/TCGA-LIHC/processed/CNV.rds")
cnv <- readRDS("/Users/ricard/data/TCGA-LIHC/u processed/CNV.rds")
cnv <- readRDS("/Users/ricard/data/TCGA-LIHC/unprocessed/CNV.rds")
class(cnv)
View(cnv)
log2(8700/2)
hist(cnv$Segment_Mean)
hist(cnv$Segment_Mean)
cnv$copy_number <- 2**(cnv$Segment_Mean*2)
View(cnv)
hist(cnv$copy_number)
cnv$copy_number_round <- ceiling(cnv$copy_number)
View(cnv)
cnv$copy_number <- 2*(cnv$Segment_Mean**2)
cnv$copy_number_round <- ceiling(cnv$copy_number)
View(cnv)
cnv$copy_number <- 2*(2**cnv$Segment_Mean)
cnv$copy_number_round <- ceiling(cnv$copy_number)
View(cnv)
cnv$copy_number_round <- round(cnv$copy_number)
View(cnv)
cnv$copy_number <- 2*(2**cnv$Segment_Mean)
cnv$copy_number_round <- round(cnv$copy_number)
View(cnv)
hist(cnv$copy_number_round)
View(cnv)
proteomics <- readRDS("/Users/ricard/data/TCGA-LIHC/unprocessed/Proteomics.rds")
View(proteomics)
methylation <- readRDS("/Users/ricard/data/TCGA-LIHC/unprocessed/Methylation.rds")
devtools::load_all("/Users/ricard/mofa/MOFAtools")
library(MOFAtools)
library(data.table)
library(purrr)
library(ggplot2)
theme_fn <- function() {
theme(
# plot.title = element_text(size=titlesize),
plot.margin = margin(10,10,10,10),
axis.title.x=element_text(colour="black",size=rel(1.75), margin=margin(20,0,3,0)),
axis.title.y=element_text(colour="black",size=rel(1.75), margin=margin(0,20,0,3)),
axis.text.x=element_text(colour="black",size=rel(1.5)),
axis.text.y=element_text(colour="black",size=rel(1.5)),
axis.ticks.x = element_line(colour="black"),
axis.ticks.y = element_line(colour="black"),
axis.line.x = element_line(color="black"),
axis.line.y = element_line(color="black"),
legend.position="none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()
)
}
# in.folder <- "/Users/ricard/data/MOFA/simulations/results/learnK/M"
in.folder <- "/Users/ricard/data/MOFA/simulations/18Aug/M"
files <- list.files(in.folder, pattern=".hdf5$")
models <- list()
for (i in 1:length(files)) {
split <- strsplit(files[i],"_")[[1]]
m <- split[1]
trial <- substr(split[[2]],1,nchar(split[[2]])-5)
models[[paste(m,trial,sep="_")]] <- loadModel(paste0(in.folder,"/",files[i]))
}
m_dt <- data.table(
infered_k = sapply(models, function(x) tail(x@TrainStats$activeK,1) ),
M = as.numeric(sapply(strsplit(names(models),"_"),"[[",1)),
trial = as.numeric(sapply(strsplit(names(models),"_"),"[[",2))
)
p <- ggplot(m_dt, aes(x=M, y=infered_k)) +
# geom_point(size=0.5) +
# geom_bar(aes(fill=trial), stat="identity", fill="red", alpha=0.5) +
geom_bar(aes(group = trial, fill=M), position = "dodge", stat="identity", color="black", size=0.1) +
geom_hline(yintercept = 10, color="black", size=0.6, linetype="solid") +
labs(x="Number of views", y="Number of infered factors") +
# scale_y_continuous(limits=c(0,11),breaks=c(5,10,15)) +
# scale_x_continuous(limits=c(0,14), breaks=c(1,3,5,7,9,11,13)) +
theme_fn() +
theme(
axis.text.x=element_text(colour="black",size=rel(1.5), angle=90, vjust = 0.5, hjust=0.5)
)
print(p)
# pdf("/Users/ricard/CLL/simulations/learnK/out/M.pdf", width = 8, height = 5)
# print(p)
# dev.off()
View(m_dt)
View(m_dt)
files
files <- list.files(in.folder, pattern=".hdf5$")
files
# in.folder <- "/Users/ricard/data/MOFA/simulations/results/learnK/M"
in.folder <- "/Users/ricard/data/MOFA/simulations/18Aug/M"
files <- list.files(in.folder, pattern=".hdf5$")
models <- list()
for (i in 1:length(files)) {
split <- strsplit(files[i],"_")[[1]]
m <- split[1]
trial <- substr(split[[2]],1,nchar(split[[2]])-5)
models[[paste(m,trial,sep="_")]] <- loadModel(paste0(in.folder,"/",files[i]))
}
m_dt <- data.table(
infered_k = sapply(models, function(x) tail(x@TrainStats$activeK,1) ),
M = as.numeric(sapply(strsplit(names(models),"_"),"[[",1)),
trial = as.numeric(sapply(strsplit(names(models),"_"),"[[",2))
) .[,M:=factor(M,levels=sort(unique(M)))]
m_dt <- data.table(
infered_k = sapply(models, function(x) tail(x@TrainStats$activeK,1) ),
M = as.numeric(sapply(strsplit(names(models),"_"),"[[",1)),
trial = as.numeric(sapply(strsplit(names(models),"_"),"[[",2))
) %>% .[,M:=factor(M,levels=sort(unique(M)))]
p <- ggplot(m_dt, aes(x=M, y=infered_k)) +
# geom_point(size=0.5) +
# geom_bar(aes(fill=trial), stat="identity", fill="red", alpha=0.5) +
geom_bar(aes(group = trial, fill=M), position = "dodge", stat="identity", color="black", size=0.1) +
geom_hline(yintercept = 10, color="black", size=0.6, linetype="solid") +
labs(x="Number of views", y="Number of infered factors") +
# scale_y_continuous(limits=c(0,11),breaks=c(5,10,15)) +
# scale_x_continuous(limits=c(0,14), breaks=c(1,3,5,7,9,11,13)) +
theme_fn() +
theme(
axis.text.x=element_text(colour="black",size=rel(1.5), angle=90, vjust = 0.5, hjust=0.5)
)
print(p)
p <- ggplot(m_dt, aes(x=M, y=infered_k)) +
# geom_point(size=0.5) +
# geom_bar(aes(fill=trial), stat="identity", fill="red", alpha=0.5) +
geom_bar(aes(group = trial, fill=M), position = "dodge", stat="identity", color="black", size=0.1) +
geom_hline(yintercept = 10, color="black", size=0.6, linetype="solid") +
labs(x="Number of views", y="Number of infered factors") +
scale_y_continuous(limits=c(0,12),breaks=c(0,10)) +
# scale_x_continuous(limits=c(0,14), breaks=c(1,3,5,7,9,11,13)) +
theme_fn() +
theme(
axis.text.x=element_text(colour="black",size=rel(1.5), angle=90, vjust = 0.5, hjust=0.5)
)
print(p)
pdf("/Users/ricard/CLL/simulations/learnK/out/M.pdf", width = 8, height = 5)
print(p)
dev.off()
