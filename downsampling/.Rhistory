legend.background=element_blank(),
panel.border = element_blank()
)
print(p3)
p3 = ggplot(tmp, aes(x, y, color=Hnf1b)) +
geom_point(size=2.0) +
scale_colour_distiller(palette = "Spectral") +
xlab("Pseudotime component 1") + ylab("Pseudotime Component 2") +
theme(
axis.title.x = element_text(colour="black", size=18),
axis.title.y = element_blank(),
axis.text.x = element_text(colour="black",size=rel(1.6)),
axis.text.y = element_text(colour="black",size=rel(1.6)),
axis.line = element_line(colour="black", size=rel(1.0)),
axis.ticks = element_line(colour="black", size=rel(1.0)),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.position="right",
legend.text=element_text(size=15),
legend.key = element_blank(),
legend.title=element_text(size=18),
legend.background=element_blank(),
panel.border = element_blank()
)
tmp <- data.frame(
sample = colnames(sce),
lineage = sce$lineage,
x = eigenvectors(dm)[,1],
y = eigenvectors(dm)[,2],
Hnf1b = exprs(sce)["Hnf1b", ],
blah = "blah"
)
# p2 = ggplot(tmp, aes(blah, x)) +
#   ggbeeswarm::geom_quasirandom(aes(colour = Psmd3), size=2.5) +
#   scale_colour_distiller(palette = "Spectral") +
#   coord_flip() +
#   ylab("Pseudotime Component 1") +
#   theme(
#     axis.title.x = element_text(colour="black", size=18),
#     axis.title.y = element_blank(),
#     axis.text.x = element_text(colour="black",size=rel(1.6)),
#     axis.text.y = element_blank(),
#     axis.line = element_line(colour="black", size=rel(1.0)),
#     axis.ticks = element_line(colour="black", size=rel(1.0)),
#     panel.background = element_blank(),
#     panel.grid = element_blank(),
#     legend.position="right",
#     legend.text=element_text(size=15),
#     legend.key = element_blank(),
#     legend.title=element_text(size=18),
#     legend.background=element_blank(),
#     panel.border = element_blank()
#   )
# print(p2)
p3 = ggplot(tmp, aes(x, y, color=Hnf1b)) +
geom_point(size=2.0) +
scale_colour_distiller(palette = "Spectral") +
xlab("Pseudotime component 1") + ylab("Pseudotime Component 2") +
theme(
axis.title.x = element_text(colour="black", size=18),
axis.title.y = element_blank(),
axis.text.x = element_text(colour="black",size=rel(1.6)),
axis.text.y = element_text(colour="black",size=rel(1.6)),
axis.line = element_line(colour="black", size=rel(1.0)),
axis.ticks = element_line(colour="black", size=rel(1.0)),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.position="right",
legend.text=element_text(size=15),
legend.key = element_blank(),
legend.title=element_text(size=18),
legend.background=element_blank(),
panel.border = element_blank()
)
print(p3)
r <- cor(tmp$x,t(exprs(sce)), method = "pearson")[1,]
# r <- cor(tmp$y,t(exprs(sce)), method = "pearson")[1,]
tail(sort(abs(r)))
tmp <- data.frame(
sample = colnames(sce),
lineage = sce$lineage,
x = eigenvectors(dm)[,1],
y = eigenvectors(dm)[,2],
Crxos = exprs(sce)["Crxos", ],
blah = "blah"
)
# p2 = ggplot(tmp, aes(blah, x)) +
#   ggbeeswarm::geom_quasirandom(aes(colour = Psmd3), size=2.5) +
#   scale_colour_distiller(palette = "Spectral") +
#   coord_flip() +
#   ylab("Pseudotime Component 1") +
#   theme(
#     axis.title.x = element_text(colour="black", size=18),
#     axis.title.y = element_blank(),
#     axis.text.x = element_text(colour="black",size=rel(1.6)),
#     axis.text.y = element_blank(),
#     axis.line = element_line(colour="black", size=rel(1.0)),
#     axis.ticks = element_line(colour="black", size=rel(1.0)),
#     panel.background = element_blank(),
#     panel.grid = element_blank(),
#     legend.position="right",
#     legend.text=element_text(size=15),
#     legend.key = element_blank(),
#     legend.title=element_text(size=18),
#     legend.background=element_blank(),
#     panel.border = element_blank()
#   )
# print(p2)
p3 = ggplot(tmp, aes(x, y, color=Crxos)) +
geom_point(size=2.0) +
scale_colour_distiller(palette = "Spectral") +
xlab("Pseudotime component 1") + ylab("Pseudotime Component 2") +
theme(
axis.title.x = element_text(colour="black", size=18),
axis.title.y = element_blank(),
axis.text.x = element_text(colour="black",size=rel(1.6)),
axis.text.y = element_text(colour="black",size=rel(1.6)),
axis.line = element_line(colour="black", size=rel(1.0)),
axis.ticks = element_line(colour="black", size=rel(1.0)),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.position="right",
legend.text=element_text(size=15),
legend.key = element_blank(),
legend.title=element_text(size=18),
legend.background=element_blank(),
panel.border = element_blank()
)
print(p3)
library(data.table)
library(purrr)
library(scater)
library(ggplot2)
library(destiny)
## I/O ##
io <- list()
io$basedir <- "/Users/ricard/data/gastrulation"
io$in.sample_metadata <- paste0(io$basedir,"/sample_metadata.txt")
io$rna.infile <- paste(io$basedir,"expr/parsed/processed/sceset_filtered.rds",sep="/")
## Options ##
opts <- list()
opts$stage_lineage <- c("E4.5_EPI","E4.5_PE","E3.5_ICM","E5.5_EPI","E6.5_EPI")
# opts$stage_lineage <- c("E5.5_EPI")
opts$cells <- fread(io$in.sample_metadata) %>% .[,stage_lineage:=paste(stage,lineage,sep="_")] %>%
.[pass_exprQC==T & outlier==F & stage_lineage%in%opts$stage_lineage, sample]
metadata <- fread(io$in.sample_metadata, header=T) %>% .[sample%in%opts$cells]
sce <- readRDS(io$rna.infile)[,opts$cells]
library(data.table)
library(purrr)
library(scater)
library(ggplot2)
library(destiny)
## I/O ##
io <- list()
io$basedir <- "/Users/ricard/data/gastrulation"
io$in.sample_metadata <- paste0(io$basedir,"/sample_metadata.txt")
io$rna.infile <- paste(io$basedir,"expr/parsed/processed/sceset_filtered.rds",sep="/")
## Options ##
opts <- list()
opts$stage_lineage <- c("E4.5_EPI","E4.5_PE","E3.5_ICM","E5.5_EPI","E6.5_EPI")
# opts$stage_lineage <- c("E5.5_EPI")
opts$cells <- fread(io$in.sample_metadata) %>% .[,stage_lineage:=paste(stage,lineage,sep="_")] %>%
.[pass_exprQC==T & outlier==F & stage_lineage%in%opts$stage_lineage, sample]
# (Q) Not sure why we need to remove those cells
opts$cells <- opts$cells[!opts$cells%in% c("E6.5_P0_embryo2_cell46","E6.5_P0_embryo2_cell68")]
metadata <- fread(io$in.sample_metadata, header=T) %>% .[sample%in%opts$cells]
sce <- readRDS(io$rna.infile)[,opts$cells]
sce$stage_lineage <- paste(sce$stage,sce$lineage,sep="_")
# Normalize
sce <- scater::normalize(sce)
# Fit a mean-dependent trend to the gene-specific variances
var.fit <- scran::trendVar(sce, trend="loess", use.spikes=FALSE)
# Decompose the gene-specific variance into biological and technical components
var.out <- scran::decomposeVar(sce, var.fit)
var.out[is.nan(var.out$p.value),] <- NA
fData(sce)$techVar <- var.out$tech
fData(sce)$bioVar <- var.out$bio
fData(sce)$totalVar <- var.out$total
# Keep N more variable/overdispersed genes
N <- 500
# genes <- names(tail(sort(apply(exprs(sce),1,var)), n=N))
genes <- rownames(head(fData(sce)[order(fData(sce)$bioVar, decreasing = T),],n=N))
sce <- sce[rownames(sce) %in% genes]
dm <- DiffusionMap(t(exprs(sce)))
# plot(dm, col.by = 'variable')
tmp <- data.frame(
sample = colnames(sce),
stage_lineage = sce$stage_lineage,
x = eigenvectors(dm)[,1],
y = eigenvectors(dm)[,2]
)
p <- ggplot(tmp, aes(x,y)) +
geom_point(aes(color=stage_lineage), alpha=0.7, size=2.0) +
labs(x="Diffusion component 1", y="Diffusion component 2") +
theme(
plot.title = element_text(size=20, hjust=0.5),
axis.title.y = element_text(colour="black", size=16, margin=margin(0,15,0,0)),
axis.title.x = element_text(colour="black", size=16, margin=margin(15,0,0,0)),
axis.text.x = element_text(colour="black",size=rel(1.4)),
axis.text.y = element_text(colour="black",size=rel(1.4)),
axis.line = element_line(colour="black", size=rel(0.9)),
axis.ticks = element_line(colour="black", size=rel(1.0)),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.position="top",
legend.text=element_text(size=15),
legend.key = element_blank(),
legend.title=element_blank(),
legend.background=element_blank(),
panel.border = element_blank()
)
print(p)
# pdf("/Users/ricard/NMT-seq/rebuttal/EB/pseudotime/out/out/pseudotime.pdf", useDingbats = F)
# print(p)
# dev.off()
dm <- DiffusionMap(t(exprs(sce)))
# plot(dm, col.by = 'variable')
tmp <- data.frame(
sample = colnames(sce),
stage_lineage = sce$stage_lineage,
x = eigenvectors(dm)[,1],
y = eigenvectors(dm)[,2],
z = eigenvectors(dm)[,3]
)
p <- ggplot(tmp, aes(x,y)) +
geom_point(aes(color=stage_lineage), alpha=0.7, size=2.0) +
labs(x="Diffusion component 1", y="Diffusion component 2") +
theme(
plot.title = element_text(size=20, hjust=0.5),
axis.title.y = element_text(colour="black", size=16, margin=margin(0,15,0,0)),
axis.title.x = element_text(colour="black", size=16, margin=margin(15,0,0,0)),
axis.text.x = element_text(colour="black",size=rel(1.4)),
axis.text.y = element_text(colour="black",size=rel(1.4)),
axis.line = element_line(colour="black", size=rel(0.9)),
axis.ticks = element_line(colour="black", size=rel(1.0)),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.position="top",
legend.text=element_text(size=15),
legend.key = element_blank(),
legend.title=element_blank(),
legend.background=element_blank(),
panel.border = element_blank()
)
print(p)
p <- ggplot(tmp, aes(x,z)) +
geom_point(aes(color=stage_lineage), alpha=0.7, size=2.0) +
labs(x="Diffusion component 1", y="Diffusion component 3") +
theme(
plot.title = element_text(size=20, hjust=0.5),
axis.title.y = element_text(colour="black", size=16, margin=margin(0,15,0,0)),
axis.title.x = element_text(colour="black", size=16, margin=margin(15,0,0,0)),
axis.text.x = element_text(colour="black",size=rel(1.4)),
axis.text.y = element_text(colour="black",size=rel(1.4)),
axis.line = element_line(colour="black", size=rel(0.9)),
axis.ticks = element_line(colour="black", size=rel(1.0)),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.position="top",
legend.text=element_text(size=15),
legend.key = element_blank(),
legend.title=element_blank(),
legend.background=element_blank(),
panel.border = element_blank()
)
print(p)
p <- ggplot(tmp, aes(y,z)) +
geom_point(aes(color=stage_lineage), alpha=0.7, size=2.0) +
labs(x="Diffusion component 2", y="Diffusion component 3") +
theme(
plot.title = element_text(size=20, hjust=0.5),
axis.title.y = element_text(colour="black", size=16, margin=margin(0,15,0,0)),
axis.title.x = element_text(colour="black", size=16, margin=margin(15,0,0,0)),
axis.text.x = element_text(colour="black",size=rel(1.4)),
axis.text.y = element_text(colour="black",size=rel(1.4)),
axis.line = element_line(colour="black", size=rel(0.9)),
axis.ticks = element_line(colour="black", size=rel(1.0)),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.position="top",
legend.text=element_text(size=15),
legend.key = element_blank(),
legend.title=element_blank(),
legend.background=element_blank(),
panel.border = element_blank()
)
print(p)
# pdf("/Users/ricard/NMT-seq/rebuttal/EB/pseudotime/out/out/pseudotime.pdf", useDingbats = F)
# print(p)
# dev.off()
library(data.table)
library(purrr)
library(scater)
library(ggplot2)
library(destiny)
## I/O ##
io <- list()
io$basedir <- "/Users/ricard/data/gastrulation"
io$in.sample_metadata <- paste0(io$basedir,"/sample_metadata.txt")
io$rna.infile <- paste(io$basedir,"expr/parsed/processed/sceset_filtered.rds",sep="/")
## Options ##
opts <- list()
opts$stage_lineage <- c("E4.5_EPI","E4.5_PE","E3.5_ICM","E5.5_EPI","E6.5_EPI","E6.75_EPI")
# opts$stage_lineage <- c("E5.5_EPI")
opts$cells <- fread(io$in.sample_metadata) %>% .[,stage_lineage:=paste(stage,lineage,sep="_")] %>%
.[pass_exprQC==T & outlier==F & stage_lineage%in%opts$stage_lineage, sample]
# (Q) Not sure why we need to remove those cells
opts$cells <- opts$cells[!opts$cells%in% c("E6.5_P0_embryo2_cell46","E6.5_P0_embryo2_cell68")]
metadata <- fread(io$in.sample_metadata, header=T) %>% .[sample%in%opts$cells]
sce <- readRDS(io$rna.infile)[,opts$cells]
sce$stage_lineage <- paste(sce$stage,sce$lineage,sep="_")
# Normalize
sce <- scater::normalize(sce)
# Fit a mean-dependent trend to the gene-specific variances
var.fit <- scran::trendVar(sce, trend="loess", use.spikes=FALSE)
# Decompose the gene-specific variance into biological and technical components
var.out <- scran::decomposeVar(sce, var.fit)
var.out[is.nan(var.out$p.value),] <- NA
fData(sce)$techVar <- var.out$tech
fData(sce)$bioVar <- var.out$bio
fData(sce)$totalVar <- var.out$total
# Keep N more variable/overdispersed genes
N <- 500
# genes <- names(tail(sort(apply(exprs(sce),1,var)), n=N))
genes <- rownames(head(fData(sce)[order(fData(sce)$bioVar, decreasing = T),],n=N))
sce <- sce[rownames(sce) %in% genes]
dm <- DiffusionMap(t(exprs(sce)))
# plot(dm, col.by = 'variable')
tmp <- data.frame(
sample = colnames(sce),
stage_lineage = sce$stage_lineage,
x = eigenvectors(dm)[,1],
y = eigenvectors(dm)[,2],
z = eigenvectors(dm)[,3]
)
p <- ggplot(tmp, aes(x,y)) +
geom_point(aes(color=stage_lineage), alpha=0.7, size=2.0) +
labs(x="Diffusion component 1", y="Diffusion component 2") +
theme(
plot.title = element_text(size=20, hjust=0.5),
axis.title.y = element_text(colour="black", size=16, margin=margin(0,15,0,0)),
axis.title.x = element_text(colour="black", size=16, margin=margin(15,0,0,0)),
axis.text.x = element_text(colour="black",size=rel(1.4)),
axis.text.y = element_text(colour="black",size=rel(1.4)),
axis.line = element_line(colour="black", size=rel(0.9)),
axis.ticks = element_line(colour="black", size=rel(1.0)),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.position="top",
legend.text=element_text(size=15),
legend.key = element_blank(),
legend.title=element_blank(),
legend.background=element_blank(),
panel.border = element_blank()
)
print(p)
p <- ggplot(tmp, aes(x,z)) +
geom_point(aes(color=stage_lineage), alpha=0.7, size=2.0) +
labs(x="Diffusion component 1", y="Diffusion component 3") +
theme(
plot.title = element_text(size=20, hjust=0.5),
axis.title.y = element_text(colour="black", size=16, margin=margin(0,15,0,0)),
axis.title.x = element_text(colour="black", size=16, margin=margin(15,0,0,0)),
axis.text.x = element_text(colour="black",size=rel(1.4)),
axis.text.y = element_text(colour="black",size=rel(1.4)),
axis.line = element_line(colour="black", size=rel(0.9)),
axis.ticks = element_line(colour="black", size=rel(1.0)),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.position="top",
legend.text=element_text(size=15),
legend.key = element_blank(),
legend.title=element_blank(),
legend.background=element_blank(),
panel.border = element_blank()
)
print(p)
p <- ggplot(tmp, aes(y,z)) +
geom_point(aes(color=stage_lineage), alpha=0.7, size=2.0) +
labs(x="Diffusion component 2", y="Diffusion component 3") +
theme(
plot.title = element_text(size=20, hjust=0.5),
axis.title.y = element_text(colour="black", size=16, margin=margin(0,15,0,0)),
axis.title.x = element_text(colour="black", size=16, margin=margin(15,0,0,0)),
axis.text.x = element_text(colour="black",size=rel(1.4)),
axis.text.y = element_text(colour="black",size=rel(1.4)),
axis.line = element_line(colour="black", size=rel(0.9)),
axis.ticks = element_line(colour="black", size=rel(1.0)),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.position="top",
legend.text=element_text(size=15),
legend.key = element_blank(),
legend.title=element_blank(),
legend.background=element_blank(),
panel.border = element_blank()
)
print(p)
# pdf("/Users/ricard/NMT-seq/rebuttal/EB/pseudotime/out/out/pseudotime.pdf", useDingbats = F)
# print(p)
# dev.off()
library(data.table)
library(purrr)
library(scater)
library(ggplot2)
library(destiny)
## I/O ##
io <- list()
io$basedir <- "/Users/ricard/data/gastrulation"
io$in.sample_metadata <- paste0(io$basedir,"/sample_metadata.txt")
io$rna.infile <- paste(io$basedir,"expr/parsed/processed/sceset_filtered.rds",sep="/")
## Options ##
opts <- list()
opts$stage_lineage <- c("E4.5_EPI","E4.5_PE","E3.5_ICM","E5.5_EPI","E6.5_EPI","E6.5_PE","E6.75_EPI")
# opts$stage_lineage <- c("E5.5_EPI")
opts$cells <- fread(io$in.sample_metadata) %>% .[,stage_lineage:=paste(stage,lineage,sep="_")] %>%
.[pass_exprQC==T & outlier==F & stage_lineage%in%opts$stage_lineage, sample]
# (Q) Not sure why we need to remove those cells
opts$cells <- opts$cells[!opts$cells%in% c("E6.5_P0_embryo2_cell46","E6.5_P0_embryo2_cell68")]
metadata <- fread(io$in.sample_metadata, header=T) %>% .[sample%in%opts$cells]
sce <- readRDS(io$rna.infile)[,opts$cells]
sce$stage_lineage <- paste(sce$stage,sce$lineage,sep="_")
# Normalize
sce <- scater::normalize(sce)
# Fit a mean-dependent trend to the gene-specific variances
var.fit <- scran::trendVar(sce, trend="loess", use.spikes=FALSE)
# Decompose the gene-specific variance into biological and technical components
var.out <- scran::decomposeVar(sce, var.fit)
var.out[is.nan(var.out$p.value),] <- NA
fData(sce)$techVar <- var.out$tech
fData(sce)$bioVar <- var.out$bio
fData(sce)$totalVar <- var.out$total
# Keep N more variable/overdispersed genes
N <- 500
# genes <- names(tail(sort(apply(exprs(sce),1,var)), n=N))
genes <- rownames(head(fData(sce)[order(fData(sce)$bioVar, decreasing = T),],n=N))
sce <- sce[rownames(sce) %in% genes]
dm <- DiffusionMap(t(exprs(sce)))
# plot(dm, col.by = 'variable')
tmp <- data.frame(
sample = colnames(sce),
stage_lineage = sce$stage_lineage,
x = eigenvectors(dm)[,1],
y = eigenvectors(dm)[,2],
z = eigenvectors(dm)[,3]
)
p <- ggplot(tmp, aes(x,y)) +
geom_point(aes(color=stage_lineage), alpha=0.7, size=2.0) +
labs(x="Diffusion component 1", y="Diffusion component 2") +
theme(
plot.title = element_text(size=20, hjust=0.5),
axis.title.y = element_text(colour="black", size=16, margin=margin(0,15,0,0)),
axis.title.x = element_text(colour="black", size=16, margin=margin(15,0,0,0)),
axis.text.x = element_text(colour="black",size=rel(1.4)),
axis.text.y = element_text(colour="black",size=rel(1.4)),
axis.line = element_line(colour="black", size=rel(0.9)),
axis.ticks = element_line(colour="black", size=rel(1.0)),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.position="top",
legend.text=element_text(size=15),
legend.key = element_blank(),
legend.title=element_blank(),
legend.background=element_blank(),
panel.border = element_blank()
)
print(p)
p <- ggplot(tmp, aes(x,z)) +
geom_point(aes(color=stage_lineage), alpha=0.7, size=2.0) +
labs(x="Diffusion component 1", y="Diffusion component 3") +
theme(
plot.title = element_text(size=20, hjust=0.5),
axis.title.y = element_text(colour="black", size=16, margin=margin(0,15,0,0)),
axis.title.x = element_text(colour="black", size=16, margin=margin(15,0,0,0)),
axis.text.x = element_text(colour="black",size=rel(1.4)),
axis.text.y = element_text(colour="black",size=rel(1.4)),
axis.line = element_line(colour="black", size=rel(0.9)),
axis.ticks = element_line(colour="black", size=rel(1.0)),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.position="top",
legend.text=element_text(size=15),
legend.key = element_blank(),
legend.title=element_blank(),
legend.background=element_blank(),
panel.border = element_blank()
)
print(p)
p <- ggplot(tmp, aes(y,z)) +
geom_point(aes(color=stage_lineage), alpha=0.7, size=2.0) +
labs(x="Diffusion component 2", y="Diffusion component 3") +
theme(
plot.title = element_text(size=20, hjust=0.5),
axis.title.y = element_text(colour="black", size=16, margin=margin(0,15,0,0)),
axis.title.x = element_text(colour="black", size=16, margin=margin(15,0,0,0)),
axis.text.x = element_text(colour="black",size=rel(1.4)),
axis.text.y = element_text(colour="black",size=rel(1.4)),
axis.line = element_line(colour="black", size=rel(0.9)),
axis.ticks = element_line(colour="black", size=rel(1.0)),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.position="top",
legend.text=element_text(size=15),
legend.key = element_blank(),
legend.title=element_blank(),
legend.background=element_blank(),
panel.border = element_blank()
)
print(p)
# pdf("/Users/ricard/NMT-seq/rebuttal/EB/pseudotime/out/out/pseudotime.pdf", useDingbats = F)
# print(p)
# dev.off()
