shape_by <- as.factor(shape_by)
} else {
stop("'shape_by' was specified but it was not recognised, please read the documentation")
}
shapeLegend <- T
} else {
shape_by <- rep(TRUE,N)
shapeLegend <- F
}
# Create data frame to plot
df = data.frame(x = Z[, factors[1]], y = Z[, factors[2]], shape_by = shape_by, color_by = color_by)
# remove values missing color or shape annotation
if (!showMissing) df <- df[!((df$color_by=="NaN") | (df$shape_by=="NaN")),]
if (is.null(xlabel)) xlabel <- paste("Latent factor", factors[1])
if (is.null(ylabel)) ylabel <- paste("Latent factor", factors[2])
p <- ggplot(df, aes(x, y, color = color_by, shape = shape_by)) +
geom_point(size = dotsize) +
ggtitle(title) + xlab(xlabel) + ylab(ylabel) +
scale_y_continuous(limits = c(ylim_down, ylim_up)) +
scale_x_continuous(limits = c(xlim_down, xlim_up)) +
# scale_shape_manual(values=c(19,1,2:18)[1:length(unique(shape_by))]) +
theme(plot.margin = margin(20, 20, 10, 10),
axis.text = element_text(size = rel(1), color = "black"),
axis.title = element_text(size = titlesize),
axis.title.y = element_text(size = rel(1.1), margin = margin(0, 10, 0, 0)),
axis.title.x = element_text(size = rel(1.1), margin = margin(10, 0, 0, 0)),
axis.line = element_line(color = "black", size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white"),
legend.text = element_text(size = titlesize),
legend.title = element_text(size =titlesize))
if (colorLegend) { p <- p + labs(color = name_color) } else { p <- p + guides(color = FALSE) }
if (shapeLegend) { p <- p + labs(shape = name_shape) }  else { p <- p + guides(shape = FALSE) }
return(p)
}
#' @title Visualize scatterplot of all latent variables in a pair-wise grid
#' @name scatterPairs
#' @description fill this
#' @param object a \code{\link{MOFAmodel}} object.
#' @param color_by vector of length N with discrete sample groups to color by
#' @param color_name name of the factor used to color_by (only relevant if color_by is not NULL)
#' @param showMissing boolean wether to include missing values in color_by
#' @details asd
#' @return fill this
#' @references fill this
#' @import ggplot2 GGally
#' @export
#'
scatterPairs <- function(object, factors = "all", showMissing=T,
color_by=NULL, color_name=NULL, colorLegend=F,
shape_by=NULL, shape_name=NULL, shapeLegend=F) {
# Sanity checks
if (class(object) != "MOFAmodel") stop("'object' has to be an instance of MOFAmodel")
# Collect relevant data
N <- object@Dimensions[["N"]]
Z <- getExpectations(object, "Z", "E")
factors <- as.character(factors)
# Get factors
if (paste0(factors,collapse="") == "all") {
factors <- factorNames(object)
# if(is.null(factors)) factors <- 1:ncol(Z) # old object are not compatible with factro names
} else {
stopifnot(all(factors %in% factorNames(object)))
}
Z <- Z[,factors]
# Remove constant factors
tmp <- apply(Z,2,var)
if (any(tmp==0)) {
message(paste0("Removing constant factors: ", paste(which(tmp==0), collapse="")))
Z <- Z[,!tmp==0]
factors <- factors[!tmp==0]
}
# Set color
if (!is.null(color_by)) {
# It is the name of a covariate
if (length(color_by) == 1 & is.character(color_by)) {
color_by <- getCovariates(object, color_by)
# It is a vector of length N
} else if (length(color_by) > 1) {
stopifnot(length(color_by) == N)
} else {
stop("'color_by' was specified but it was not recognised, please read the documentation")
}
} else {
color_by <- rep(TRUE,N)
colorLegend <- F
}
# Set shape
if (!is.null(shape_by)) {
# It is the name of a covariate
if (length(shape_by) == 1 & is.character(shape_by)) {
shape_by <- as.factor(getCovariates(object, shape_by))
# It is a vector of length N
} else if (length(shape_by) > 1) {
stopifnot(length(shape_by) == N)
shape_by <- as.factor(shape_by)
} else {
stop("'shape_by' was specified but it was not recognised, please read the documentation")
}
colorLegend <- T
} else {
shape_by <- rep(TRUE,N)
shapeLegend <- F
}
# Remove missing values
if(!showMissing) {
Z <- Z[!is.na(color_by),]
color_by <- color_by[!is.na(color_by)]
}
# Crete data.frame
df <- as.data.frame(Z); colnames(df) <- paste0("LF_",colnames(df))
df <- cbind(df, color_by=color_by, shape_by=shape_by)
# Define title and legend of the plot
main <- ""
if (!is.null(color_name)) { colorLegend <- T }
if (!is.null(shape_name)) { shapeLegend <- T }
p <- ggplot(df, aes_string(x=colnames(df)[1], y=colnames(df)[2], color="color_by", shape="shape_by")) + geom_point()
if (colorLegend) { p <- p + labs(color=color_name) } else { p <- p + guides(color = FALSE) }
if (shapeLegend) { p <- p + labs(shape=shape_name) } else { p <- p + guides(shape = FALSE) }
if (colorLegend | shapeLegend) {
p <- p +
theme(
legend.title=element_text(size=15, hjust=0.5, color="black"),
legend.position = "right",
legend.direction = "vertical",
legend.key = element_blank()
)
# If color_by is numeric, define the default gradient
if (is.numeric(color_by)) { p <- p + scale_color_gradientn(colors=terrain.colors(10)) }
# Extract the legend
legend <- GGally::grab_legend(p)
} else {
legend <- NULL
}
# Generate plot
p <- GGally::ggpairs(df, columns = colnames(df[,!colnames(df) %in% c("color_by","shape_by")]),
lower=list(continuous="points"), diag=list(continuous='blankDiag'), upper=list(continuous='points'),
mapping=aes(color=color_by, shape=shape_by), title=main, legend=legend) +
theme_bw() +
theme(plot.title = element_text(size = 16, hjust=0.5, color="black"),
axis.title = element_text(size = 10, color="black"),
axis.text = element_text(size = 9, color="black"),
legend.position = "right",
legend.direction = "vertical"
)
# If color_by is numeric, define the default gradient
if (is.numeric(color_by)) {
for(i in 1:p$nrow) {
for(j in 1:p$ncol){
p[i,j] <- p[i,j] + scale_color_gradientn(colors=terrain.colors(10))
}
}
}
return(p)
}
scatterPairs(model, factors = c("1","2","7"), color_by="mean_methylation", shape_by="culture")
scatterPairs(model, factors = c("1","2","7"), color_by="mean_methylation", shape_by="culture", shapeLegend = T)
scatterPairs(model, factors = c("1","2","7"), color_by="mean_methylation", shape_by="culture", colorLegend=T, shapeLegend = T)
scatterPairs(model, factors = c("1","7"), color_by="mean_methylation", shape_by="culture", colorLegend=T, shapeLegend = T)
foo <- getExpectations(model,"SW","E")[["met_super_enhancers"]][,1]
foo
foo <- tail(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,1]),n=100)
foo
foo <- names(tail(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,1]),n=50))
bar <- names(tail(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,7]),n=50))
bar
foo <- names(tail(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,1]),n=50))
foo
io$met_file  <- "/Users/ricard/data/scMT/met/parsed/all.tsv.gz"
met_file  <- "/Users/ricard/data/scMT/met/parsed/all.tsv.gz"
met <- fread(sprintf("zcat < %s",io$met_file)) %>% .[anno %in% opts$met_annos & sample %in% sampleNames(model)]
met <- fread(sprintf("zcat < %s",met_file)) %>% .[anno %in% opts$met_annos & sample %in% sampleNames(model)]
met <- fread(sprintf("zcat < %s",io$met_file)) %>% .[anno %in% "super_enhancers" & sample %in% sampleNames(model)]
met <- fread("zcat < /Users/ricard/data/scMT/met/parsed/all.tsv.gz") %>% .[anno %in% "super_enhancers" & sample %in% sampleNames(model)]
met_bar <- met[id %in% bar]
met_foo <- met[id %in% foo]
View(met_foo)
tmp <- data.table(sample=sampleNames(model), pluri=getExpectations(model,"Z","E")[,7])
View(tmp)
tmp <- data.table(sample=sampleNames(model), pluri=getExpectations(model,"Z","E")[,7])
met <- fread("zcat < /Users/ricard/data/scMT/met/parsed/all.tsv.gz") %>% .[anno %in% "super_enhancers"] %>%
merge(tmp)
met_bar <- met[id %in% bar]
met_foo <- met[id %in% foo]
View(met_foo)
met_bar[,cor(rate,pluri), by=="id"]
met_bar[,cor(rate,pluri), by==c("id","anno")]
head(met_bar)
met_bar[,.(cor(rate,pluri)), by==c("id","anno")]
met_bar[,.(cor(rate,pluri)), by=c("id","anno")]
met_foo[,.(cor(rate,pluri)), by=c("id","anno")]
plot_bar <- met_bar[,.(cor(rate,pluri)), by=c("id","anno")]
plot_foo <- met_foo[,.(cor(rate,pluri)), by=c("id","anno")]
met_bar <- met[id %in% bar] %>% .[,group:="7"]
met_foo <- met[id %in% foo] %>% .[,group:="1"]
met <- rbind(met_bar,met_foo)
to.plot <- met[,.(cor(rate,pluri)), by=c("id","anno","group")]
View(to.plot)
to.plot <- met[,.(r=cor(rate,pluri)), by=c("id","anno","group")]
View(to.plot)
ggplot(to.plot, aes(x=group,y=r)) +
geom_boxplot()
ggplot(to.plot, aes(x=group,y=r)) +
geom_boxplot() +
scale_y_continuous(limits = c(-0.3,0.3))
ggplot(to.plot, aes(x=group,y=r)) +
geom_boxplot() +
scale_y_continuous(limits = c(-0.3,0.3))
ggplot(to.plot, aes(x=group, y=r, fill=group)) +
geom_boxplot() +
scale_y_continuous(limits = c(-0.3,0.3)) +
theme_bew()
ggplot(to.plot, aes(x=group, y=r, fill=group)) +
geom_boxplot() +
scale_y_continuous(limits = c(-0.3,0.3)) +
theme_bw()
# Get top featuresof super enhancers in latent variable 1 (mean methylation rate)
foo <- names(tail(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,1]),n=50))
# Get top features of super enhancers in latent variable 7 (pluripotency)
bar <- names(tail(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,7]),n=50))
# Load methylation data
tmp <- data.table(sample=sampleNames(model), pluri=getExpectations(model,"Z","E")[,"7"])
met <- fread("zcat < /Users/ricard/data/scMT/met/parsed/all.tsv.gz") %>% .[anno %in% "super_enhancers"] %>%
merge(tmp)
met_foo <- met[id %in% foo] %>% .[,group:="1"]
met_bar <- met[id %in% bar] %>% .[,group:="7"]
met <- rbind(met_bar,met_foo)
to.plot <- met[,.(r=cor(rate,pluri)), by=c("id","anno","group")]
ggplot(to.plot, aes(x=group, y=r, fill=group)) +
geom_boxplot() +
scale_y_continuous(limits = c(-0.3,0.3)) +
theme_bw()
ggplot(to.plot, aes(x=group, y=r, fill=group)) +
geom_boxplot() +
# scale_y_continuous(limits = c(-0.3,0.3)) +
theme_bw()
View(to.plot)
View(model@Expectations$Z$E)
# Get top featuresof super enhancers in latent variable 1 (mean methylation rate)
foo <- names(tail(sort(abs(getExpectations(model,"SW","E")[["met_super_enhancers"]][,1])),n=50))
# Get top features of super enhancers in latent variable 7 (pluripotency)
bar <- names(tail(sort(abs(getExpectations(model,"SW","E")[["met_super_enhancers"]][,7])),n=50))
# Load methylation data
tmp <- data.table(sample=sampleNames(model), pluri=getExpectations(model,"Z","E")[,"7"])
met <- fread("zcat < /Users/ricard/data/scMT/met/parsed/all.tsv.gz") %>% .[anno %in% "super_enhancers"] %>%
merge(tmp)
met_foo <- met[id %in% foo] %>% .[,group:="1"]
met_bar <- met[id %in% bar] %>% .[,group:="7"]
met <- rbind(met_bar,met_foo)
to.plot <- met[,.(r=cor(rate,pluri)), by=c("id","anno","group")]
ggplot(to.plot, aes(x=group, y=r, fill=group)) +
geom_boxplot() +
# scale_y_continuous(limits = c(-0.3,0.3)) +
theme_bw()
View(getExpectations(model,"SW","E")[["met_super_enhancers"]])
# Get top featuresof super enhancers in latent variable 1 (mean methylation rate)
foo <- names(tail(sort(abs(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"1"])),n=50))
# Get top features of super enhancers in latent variable 7 (pluripotency)
bar <- names(tail(sort(abs(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"])),n=50))
# Load methylation data
tmp <- data.table(sample=sampleNames(model), pluri=getExpectations(model,"Z","E")[,"7"])
met <- fread("zcat < /Users/ricard/data/scMT/met/parsed/all.tsv.gz") %>% .[anno %in% "super_enhancers"] %>%
merge(tmp)
met_foo <- met[id %in% foo] %>% .[,group:="1"]
met_bar <- met[id %in% bar] %>% .[,group:="7"]
met <- rbind(met_bar,met_foo)
to.plot <- met[,.(r=cor(rate,pluri)), by=c("id","anno","group")]
ggplot(to.plot, aes(x=group, y=r, fill=group)) +
geom_boxplot() +
# scale_y_continuous(limits = c(-0.3,0.3)) +
theme_bw()
# Get top featuresof super enhancers in latent variable 1 (mean methylation rate)
# foo <- names(tail(sort(abs(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"1"])),n=200))
# Get top features of super enhancers in latent variable 7 (pluripotency)
bar <- names(tail(sort(abs(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"])),n=200))
# Load methylation data
tmp <- data.table(sample=sampleNames(model), pluri=getExpectations(model,"Z","E")[,"7"])
met <- fread("zcat < /Users/ricard/data/scMT/met/parsed/all.tsv.gz") %>% .[anno %in% "super_enhancers"] %>%
merge(tmp)
met_foo <- met[id %in% bar] %>% .[,group:="Pluripotency factor"]
met_bar <- met[!id %in% bar] %>% .[,group:="No pluripotency factor"]
met <- rbind(met_bar,met_foo)
to.plot <- met[,.(r=cor(rate,pluri)), by=c("id","anno","group")]
ggplot(to.plot, aes(x=group, y=r, fill=group)) +
geom_boxplot() +
# scale_y_continuous(limits = c(-0.3,0.3)) +
theme_bw()
?rvind
?rbind
# Get top featuresof super enhancers in latent variable 1 (mean methylation rate)
foo <- names(tail(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"1"]),n=100))
bar <- names(head(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"1"]),n=100))
# Get top features of super enhancers in latent variable 7 (pluripotency)
bar <- names(tail(sort(abs(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"])),n=200))
# Load methylation data
tmp <- data.table(sample=sampleNames(model), pluri=getExpectations(model,"Z","E")[,"7"])
met <- fread("zcat < /Users/ricard/data/scMT/met/parsed/all.tsv.gz") %>% .[anno %in% "super_enhancers"] %>%
merge(tmp)
met_foo <- met[id %in% foo] %>% .[,group:="1"]
met_bar <- met[id %in% bar] %>% .[,group:="2"]
met_baz <- met[!id %in% c(foo,bar)] %>% .[,group:="3"]
met <- rbind(met_bar,met_foo,met_baz)
to.plot <- met[,.(r=cor(rate,pluri)), by=c("id","anno","group")]
ggplot(to.plot, aes(x=group, y=r, fill=group)) +
geom_boxplot() +
# scale_y_continuous(limits = c(-0.3,0.3)) +
theme_bw()
# Get top featuresof super enhancers in latent variable 1 (mean methylation rate)
foo <- names(tail(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"]),n=100))
bar <- names(head(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"]),n=100))
# Get top features of super enhancers in latent variable 7 (pluripotency)
# bar <- names(tail(sort(abs(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"])),n=200))
# Load methylation data
tmp <- data.table(sample=sampleNames(model), pluri=getExpectations(model,"Z","E")[,"7"])
met <- fread("zcat < /Users/ricard/data/scMT/met/parsed/all.tsv.gz") %>% .[anno %in% "super_enhancers"] %>%
merge(tmp)
met_foo <- met[id %in% foo] %>% .[,group:="1"]
met_bar <- met[id %in% bar] %>% .[,group:="2"]
met_baz <- met[!id %in% c(foo,bar)] %>% .[,group:="3"]
met <- rbind(met_bar,met_foo,met_baz)
to.plot <- met[,.(r=cor(rate,pluri)), by=c("id","anno","group")]
ggplot(to.plot, aes(x=group, y=r, fill=group)) +
geom_boxplot() +
# scale_y_continuous(limits = c(-0.3,0.3)) +
theme_bw()
r2 <- calculateVarianceExplained(model, views="all", factors="all", plotit=T, perFeature=F,
orderFactorsbyR2=F, showtotalR2=F)
getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"]
sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"])
tail(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"]),n=50)
head(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"]),n=50)
getExpectations(model,"Z","E")[,"7"]
met <- fread("zcat < /Users/ricard/data/scMT/met/parsed/all.tsv.gz") %>% .[anno %in% "super_enhancers"] %>%
merge(tmp)
# Get top featuresof super enhancers in latent variable 1 (mean methylation rate)
foo <- names(tail(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"]),n=50))
bar <- names(head(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"]),n=50))
# Get top features of super enhancers in latent variable 7 (pluripotency)
# bar <- names(tail(sort(abs(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"])),n=200))
# Load methylation data
tmp <- data.table(sample=sampleNames(model), pluri=getExpectations(model,"Z","E")[,"7"])
# met <- fread("zcat < /Users/ricard/data/scMT/met/parsed/all.tsv.gz") %>% .[anno %in% "super_enhancers"] %>% merge(tmp)
met_foo <- met[id %in% foo] %>% .[,group:="1"]
met_bar <- met[id %in% bar] %>% .[,group:="2"]
met_baz <- met[!id %in% c(foo,bar)] %>% .[,group:="3"]
small_met <- rbind(met_bar,met_foo,met_baz)
to.plot <- small_met[,.(r=cor(rate,pluri)), by=c("id","anno","group")]
ggplot(to.plot, aes(x=group, y=r, fill=group)) +
geom_boxplot() +
# scale_y_continuous(limits = c(-0.3,0.3)) +
theme_bw()
to.plot <- small_met[,.(.N), by=c("id","anno","group")]
View(to.plot)
View(to.plot)
View(small_met)
model@TrainData$met_super_enhancers[,"super_enhancers_8661"]
model@TrainData$met_super_enhancers["super_enhancers_8661",]
colnames(model@TrainData$met_super_enhancers)
rownames(model@TrainData$met_super_enhancers)
"super_enhancers_8661" %in% rownames(model@TrainData$met_super_enhancers)
foo <- names(tail(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"]),n=50))
bar <- names(head(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"]),n=50))
baz <- names(tail(sort(abs(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"1"])),n=200))
tmp <- data.table(sample=sampleNames(model), pluri=getExpectations(model,"Z","E")[,"7"])
met_foo <- met[id %in% foo] %>% .[,group:="1"]
met_bar <- met[id %in% bar] %>% .[,group:="2"]
met_baz <- met[id %in% baz] %>% .[,group:="3"]
small_met <- rbind(met_bar,met_foo,met_baz)
to.plot <- small_met[,.(.N), by=c("id","anno","group")]
View(to.plot)
to.plot <- small_met[,.(r=cor(rate,pluri)), by=c("id","anno","group")]
ggplot(to.plot, aes(x=group, y=r, fill=group)) +
geom_boxplot() +
# scale_y_continuous(limits = c(-0.3,0.3)) +
theme_bw()
ggplot(to.plot, aes(x=group, y=r, fill=group)) +
geom_boxplot(outlier.shape = NA) +
# scale_y_continuous(limits = c(-0.3,0.3)) +
theme_bw()
ggplot(to.plot, aes(x=group, y=r, fill=group)) +
geom_boxplot(outlier.size = 0) +
# scale_y_continuous(limits = c(-0.3,0.3)) +
theme_bw()
ggplot(to.plot, aes(x=group, y=r, fill=group)) +
geom_boxplot(outlier.size = NA) +
scale_y_continuous(limits = c(0.5,0.)) +
theme_bw()
ggplot(to.plot, aes(x=group, y=r, fill=group)) +
geom_boxplot(outlier.size = NA) +
scale_y_continuous(limits = c(0.5,0.9)) +
theme_bw()
ggplot(to.plot, aes(x=group, y=r, fill=group)) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = c(0.5,0.9)) +
theme_bw()
met_foo <- met[id %in% foo] %>% .[,group:="1"]
met_baz <- met[id %in% baz] %>% .[,group:="2"]
met_bar <- met[id %in% bar] %>% .[,group:="3"]
small_met <- rbind(met_bar,met_foo,met_baz)
to.plot <- small_met[,.(r=cor(rate,pluri)), by=c("id","anno","group")]
ggplot(to.plot, aes(x=group, y=r, fill=group)) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = c(0.5,0.9)) +
theme_bw()
baz <- names(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"1"])
baz[!baz %in% c(foo,bar)]
baz <- baz[!baz %in% c(foo,bar)]
tmp <- data.table(sample=sampleNames(model), pluri=getExpectations(model,"Z","E")[,"7"])
# Get top featuresof super enhancers in latent variable 1 (mean methylation rate)
foo <- names(tail(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"]),n=50))
bar <- names(head(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"]),n=50))
# Get top features of super enhancers in latent variable 7 (pluripotency)
baz <- names(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"1"])
baz <- baz[!baz %in% c(foo,bar)]
# Load methylation data
tmp <- data.table(sample=sampleNames(model), pluri=getExpectations(model,"Z","E")[,"7"])
# met <- fread("zcat < /Users/ricard/data/scMT/met/parsed/all.tsv.gz") %>% .[anno %in% "super_enhancers"] %>% merge(tmp)
met_foo <- met[id %in% foo] %>% .[,group:="1"]
met_baz <- met[id %in% baz] %>% .[,group:="2"]
met_bar <- met[id %in% bar] %>% .[,group:="3"]
small_met <- rbind(met_bar,met_foo,met_baz)
to.plot <- small_met[,.(r=cor(rate,pluri)), by=c("id","anno","group")]
ggplot(to.plot, aes(x=group, y=r, fill=group)) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = c(0.5,0.9)) +
theme_bw()
foo
bar
baz
# Get top featuresof super enhancers in latent variable 1 (mean methylation rate)
foo <- names(tail(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"]),n=50))
bar <- names(head(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"]),n=50))
# Get top features of super enhancers in latent variable 7 (pluripotency)
baz <- names(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"1"])
# baz <- baz[!baz %in% c(foo,bar)]
# Load methylation data
tmp <- data.table(sample=sampleNames(model), pluri=getExpectations(model,"Z","E")[,"7"])
# met <- fread("zcat < /Users/ricard/data/scMT/met/parsed/all.tsv.gz") %>% .[anno %in% "super_enhancers"] %>% merge(tmp)
met_foo <- met[id %in% foo] %>% .[,group:="1"]
met_baz <- met[id %in% baz] %>% .[,group:="2"]
met_bar <- met[id %in% bar] %>% .[,group:="3"]
small_met <- rbind(met_bar,met_foo,met_baz)
to.plot <- small_met[,.(r=cor(rate,pluri)), by=c("id","anno","group")]
ggplot(to.plot, aes(x=group, y=r, fill=group)) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = c(0.5,0.9)) +
theme_bw()
# Get top featuresof super enhancers in latent variable 1 (mean methylation rate)
foo <- names(tail(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"]),n=25))
bar <- names(head(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"]),n=25))
# Get top features of super enhancers in latent variable 7 (pluripotency)
baz <- names(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"1"])
# baz <- baz[!baz %in% c(foo,bar)]
# Load methylation data
tmp <- data.table(sample=sampleNames(model), pluri=getExpectations(model,"Z","E")[,"7"])
# met <- fread("zcat < /Users/ricard/data/scMT/met/parsed/all.tsv.gz") %>% .[anno %in% "super_enhancers"] %>% merge(tmp)
met_foo <- met[id %in% foo] %>% .[,group:="1"]
met_baz <- met[id %in% baz] %>% .[,group:="2"]
met_bar <- met[id %in% bar] %>% .[,group:="3"]
small_met <- rbind(met_bar,met_foo,met_baz)
to.plot <- small_met[,.(r=cor(rate,pluri)), by=c("id","anno","group")]
ggplot(to.plot, aes(x=group, y=r, fill=group)) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = c(0.5,0.9)) +
theme_bw()
baz
View(small_met)
to.plot <- small_met[,.(r=cor(rate,pluri, method="spearman")), by=c("id","anno","group")]
ggplot(to.plot, aes(x=group, y=r, fill=group)) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = c(0.5,0.9)) +
theme_bw()
# Get top featuresof super enhancers in latent variable 1 (mean methylation rate)
foo <- names(tail(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"]),n=50))
bar <- names(head(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"]),n=50))
# Get top features of super enhancers in latent variable 7 (pluripotency)
baz <- names(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"1"])
# baz <- baz[!baz %in% c(foo,bar)]
# Load methylation data
tmp <- data.table(sample=sampleNames(model), pluri=getExpectations(model,"Z","E")[,"7"])
# met <- fread("zcat < /Users/ricard/data/scMT/met/parsed/all.tsv.gz") %>% .[anno %in% "super_enhancers"] %>% merge(tmp)
met_foo <- met[id %in% foo] %>% .[,group:="1"]
met_baz <- met[id %in% baz] %>% .[,group:="2"]
met_bar <- met[id %in% bar] %>% .[,group:="3"]
small_met <- rbind(met_bar,met_foo,met_baz)
to.plot <- small_met[,.(r=cor(rate,pluri, method="spearman")), by=c("id","anno","group")]
ggplot(to.plot, aes(x=group, y=r, fill=group)) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = c(0.5,0.9)) +
theme_bw()
# Get top featuresof super enhancers in latent variable 1 (mean methylation rate)
foo <- names(tail(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"]),n=10))
bar <- names(head(sort(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"7"]),n=10))
# Get top features of super enhancers in latent variable 7 (pluripotency)
baz <- names(getExpectations(model,"SW","E")[["met_super_enhancers"]][,"1"])
# baz <- baz[!baz %in% c(foo,bar)]
# Load methylation data
tmp <- data.table(sample=sampleNames(model), pluri=getExpectations(model,"Z","E")[,"7"])
# met <- fread("zcat < /Users/ricard/data/scMT/met/parsed/all.tsv.gz") %>% .[anno %in% "super_enhancers"] %>% merge(tmp)
met_foo <- met[id %in% foo] %>% .[,group:="1"]
met_baz <- met[id %in% baz] %>% .[,group:="2"]
met_bar <- met[id %in% bar] %>% .[,group:="3"]
small_met <- rbind(met_bar,met_foo,met_baz)
to.plot <- small_met[,.(r=cor(rate,pluri, method="spearman")), by=c("id","anno","group")]
ggplot(to.plot, aes(x=group, y=r, fill=group)) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = c(0.5,0.9)) +
theme_bw()
