targetedDrugs= c("D_002", "D_003", "D_166", "D_082", "D_079", "D_012", "D_030", "D_063", "D_083") ,
conc4targeted = 1:5,
chemoDrugs = c("D_006", "D_159", "D_010"),
conc4chemo = 1:5,
effectNum = 4,
effectVal = 0.7,
viab = 0.6,
maxval = 1.1,
outdir = "/tmp"
)
# Remove ranges
drugData <- drugData[,!stringr::str_detect(colnames(drugData),":")]
# Extract weights
drugWeights <- getExpectations(model,"SW","E")[["Drugs"]]
rownames(drugWeights) <- paste(drugs[substr(rownames(drugWeights),1,5),"name"], substr(rownames(drugWeights),6,8), sep="")
foo <- reshape2::melt(drugWeights, varnames=c("drugconc", "factor"), value.name="weight") %>% as.data.table
# Scale weights (before taking means)
# foo[,weight:=abs(weight)] %>% .[,weight:=weight/max(weight), by="factor"]
# Extract data
colnames(drugData) <- paste(drugs[substr(colnames(drugData),1,5),"name"], substr(colnames(drugData),6,8), sep="")
bar <- reshape2::melt(drugData, varnames=c("sample", "drugconc"), value.name="viab") %>% as.data.table
# Join
foobar <- merge(foo,bar, by="drugconc", allow.cartesian=TRUE) %>%
.[,drugconc:=as.character(drugconc)] %>%
.[,drug:=sapply(strsplit(drugconc, "_"), function(l) l[1])] %>%
.[,conc:=sapply(strsplit(drugconc, "_"), function(l) l[2])] %>%
.[,category:=drugs$target_category[match(drug, drugs$name)]] %>%
.[,target:=drugs$main_targets[match(drug, drugs$name)]] %>%
.[,pathway:=drugs$pathway[match(drug, drugs$name)]] %>%
setkey(drug)
# Remove missing cases
foobar <- foobar[complete.cases(foobar),]
# Remove uninteresting drugs
foobar <- foobar[!drug %in% c("everolimus","BAY 11-70","SGI-1776","sunitinib","chaetoglobosin A","chaetocin","vorinostat","TAE684","SGX-523","saracatinib","KUâˆ’60019","AZD7762","gefitinib","encorafenib","rabusertib","ibrutinib","spebrutinib","CCT241533","afatinib","PRT06607 HCL")]
# Remove uninteresting pathways
foobar <- foobar[!category %in% c("mTOR","NFkB","PIM","Angiogenesis","Cytoskeleton","Epigenome","ALK","MET","Cell cycle control","Other","HSP90","PI3K/AKT","JAK/STAT")]
foobar$category <- factor(foobar$category, levels=unique(foobar$category))
ndrugs <- 9
asd <- foobar[factor==stress_factor] %>% .[,.(weight=mean(weight)),by=c("drug","category","target","pathway")] %>%
.[,weight:=abs(weight)] %>% .[,weight:=weight/max(weight)] %>% setkey(weight) %>% tail(n=ndrugs) %>% .[,drug:=factor(drug,levels=drug)]
# Assign colors
# asd[,color:=sample_colors(length(unique(category)))[as.numeric(category)]]
p <- ggplot(asd, aes(x=drug, y=weight, color=category)) +
geom_point() +
geom_segment(aes(xend=drug, yend=0), size=2) +
xlab("") + ylab("Mean Relative Loading on factor 5") +
coord_flip() +
guides(color=guide_legend(title="Drug category")) +
theme(
axis.text.y = element_text(size = rel(1.5), color = "black"),
# axis.text.y = element_text(size = rel(1), color = "black"),
axis.text.x = element_text(size = rel(1.5), color = "black", angle=90, hjust=1, vjust=0.5),
# axis.title.y = element_text(size = rel(1.3), margin = margin(0,15,0,0)),
axis.title.x = element_text(size = rel(1.5), margin = margin(15,0,0,0)),
axis.line = element_line(colour = "black", size = 0.5),
axis.ticks = element_line(colour = "black", size = 0.5),
# panel.border = element_blank(),
# panel.grid.major = element_blank(),
# panel.grid.minor = element_blank(),
# panel.background = element_blank(),
legend.key = element_rect(fill = "white"),
legend.text = element_text(size=rel(1.2)),
legend.title = element_text(size=rel(1.3)),
legend.position = "right"
)
print(p)
# pdf("/Users/ricard/mofa_cll/stress_factor/out/drug_weights.pdf", width = 8.5, height = 6, useDingbats = F)
# print(p)
# dev.off()
p <- ggplot(asd, aes(x=drug, y=weight, color=category)) +
geom_point(size=3) +
geom_segment(aes(xend=drug, yend=0), size=2) +
xlab("") + ylab("Mean Relative Loading on factor 5") +
coord_flip() +
guides(color=guide_legend(title="Drug category")) +
theme(
axis.text.y = element_text(size = rel(1.5), color = "black"),
# axis.text.y = element_text(size = rel(1), color = "black"),
axis.text.x = element_text(size = rel(1.5), color = "black", angle=90, hjust=1, vjust=0.5),
# axis.title.y = element_text(size = rel(1.3), margin = margin(0,15,0,0)),
axis.title.x = element_text(size = rel(1.5), margin = margin(15,0,0,0)),
axis.line = element_line(colour = "black", size = 0.5),
axis.ticks = element_line(colour = "black", size = 0.5),
# panel.border = element_blank(),
# panel.grid.major = element_blank(),
# panel.grid.minor = element_blank(),
# panel.background = element_blank(),
legend.key = element_rect(fill = "white"),
legend.text = element_text(size=rel(1.2)),
legend.title = element_text(size=rel(1.3)),
legend.position = "right"
)
print(p)
p <- ggplot(asd, aes(x=drug, y=weight, color=category)) +
geom_point(size=3) +
geom_segment(aes(xend=drug, yend=0), size=1.75) +
xlab("") + ylab("Mean Relative Loading on factor 5") +
coord_flip() +
guides(color=guide_legend(title="Drug category")) +
theme(
axis.text.y = element_text(size = rel(1.5), color = "black"),
# axis.text.y = element_text(size = rel(1), color = "black"),
axis.text.x = element_text(size = rel(1.5), color = "black", angle=90, hjust=1, vjust=0.5),
# axis.title.y = element_text(size = rel(1.3), margin = margin(0,15,0,0)),
axis.title.x = element_text(size = rel(1.5), margin = margin(15,0,0,0)),
axis.line = element_line(colour = "black", size = 0.5),
axis.ticks = element_line(colour = "black", size = 0.5),
# panel.border = element_blank(),
# panel.grid.major = element_blank(),
# panel.grid.minor = element_blank(),
# panel.background = element_blank(),
legend.key = element_rect(fill = "white"),
legend.text = element_text(size=rel(1.2)),
legend.title = element_text(size=rel(1.3)),
legend.position = "right"
)
print(p)
p <- ggplot(asd, aes(x=drug, y=weight, color=category)) +
geom_point(size=3) +
geom_segment(aes(xend=drug, yend=0), size=1.75) +
xlab("") + ylab("Mean Relative Loading on factor 5") +
coord_flip() +
guides(color=guide_legend(title="Drug category")) +
theme_bw() + theme(
axis.text.y = element_text(size = rel(1.5), color = "black"),
# axis.text.y = element_text(size = rel(1), color = "black"),
axis.text.x = element_text(size = rel(1.5), color = "black", angle=90, hjust=1, vjust=0.5),
# axis.title.y = element_text(size = rel(1.3), margin = margin(0,15,0,0)),
axis.title.x = element_text(size = rel(1.5), margin = margin(15,0,0,0)),
axis.line = element_line(colour = "black", size = 0.5),
axis.ticks = element_line(colour = "black", size = 0.5),
# panel.border = element_blank(),
# panel.grid.major = element_blank(),
# panel.grid.minor = element_blank(),
# panel.background = element_blank(),
legend.key = element_rect(fill = "white"),
legend.text = element_text(size=rel(1.2)),
legend.title = element_text(size=rel(1.3)),
legend.position = "right"
)
print(p)
p <- ggplot(asd, aes(x=drug, y=weight, color=category)) +
geom_point(size=3) +
geom_segment(aes(xend=drug, yend=0), size=1.75) +
xlab("") + ylab("Mean Relative Loading on factor 5") +
coord_flip() +
guides(color=guide_legend(title="Drug category")) +
theme(
axis.text.y = element_text(size = rel(1.5), color = "black"),
# axis.text.y = element_text(size = rel(1), color = "black"),
axis.text.x = element_text(size = rel(1.5), color = "black", angle=90, hjust=1, vjust=0.5),
# axis.title.y = element_text(size = rel(1.3), margin = margin(0,15,0,0)),
axis.title.x = element_text(size = rel(1.5), margin = margin(15,0,0,0)),
axis.line = element_line(colour = "black", size = 0.5),
axis.ticks = element_line(colour = "black", size = 0.5),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white"),
legend.text = element_text(size=rel(1.2)),
legend.title = element_text(size=rel(1.3)),
legend.position = "right"
)
print(p)
p <- ggplot(asd, aes(x=drug, y=weight, color=category)) +
geom_point(size=3) +
geom_segment(aes(xend=drug, yend=0), size=1.75) +
xlab("") + ylab("Mean Relative Loading on factor 5") +
coord_flip() +
guides(color=guide_legend(title="Drug category")) +
theme(
axis.text.y = element_text(size = rel(1.7), color = "black"),
# axis.text.y = element_text(size = rel(1), color = "black"),
axis.text.x = element_text(size = rel(1.7), color = "black", angle=90, hjust=1, vjust=0.5),
# axis.title.y = element_text(size = rel(1.3), margin = margin(0,15,0,0)),
axis.title.x = element_text(size = rel(1.7), margin = margin(15,0,0,0)),
axis.line = element_line(colour = "black", size = 1),
axis.ticks = element_line(colour = "black", size = 1),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white"),
legend.text = element_text(size=rel(1.2)),
legend.title = element_text(size=rel(1.3)),
legend.position = "right"
)
print(p)
p <- ggplot(asd, aes(x=drug, y=weight, color=category)) +
geom_point(size=3) +
geom_segment(aes(xend=drug, yend=0), size=1.75) +
xlab("") + ylab("Mean Relative Loading on factor 5") +
coord_flip() +
guides(color=guide_legend(title="Drug category")) +
theme(
axis.text.y = element_text(size = rel(1.7), color = "black"),
# axis.text.y = element_text(size = rel(1), color = "black"),
axis.text.x = element_text(size = rel(1.7), color = "black", angle=90, hjust=1, vjust=0.5),
# axis.title.y = element_text(size = rel(1.3), margin = margin(0,15,0,0)),
axis.title.x = element_text(size = rel(1.7), margin = margin(15,0,0,0)),
axis.line = element_line(colour = "black", size = 0.75),
axis.ticks = element_line(colour = "black", size = 1),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white"),
legend.text = element_text(size=rel(1.2)),
legend.title = element_text(size=rel(1.3)),
legend.position = "right"
)
print(p)
p <- ggplot(asd, aes(x=drug, y=weight, color=category)) +
geom_point(size=3) +
geom_segment(aes(xend=drug, yend=0), size=1.75) +
xlab("") + ylab("Mean Relative Loading on factor 5") +
coord_flip() +
guides(color=guide_legend(title="Drug category")) +
theme(
axis.text.y = element_text(size = rel(1.7), color = "black"),
# axis.text.y = element_text(size = rel(1), color = "black"),
axis.text.x = element_text(size = rel(1.7), color = "black", angle=90, hjust=1, vjust=0.5),
# axis.title.y = element_text(size = rel(1.3), margin = margin(0,15,0,0)),
axis.title.x = element_text(size = rel(1.7), margin = margin(15,0,0,0)),
axis.line = element_line(colour = "black", size = 0.75),
axis.ticks = element_line(colour = "black", size = 0.75),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white"),
legend.text = element_text(size=rel(1.2)),
legend.title = element_text(size=rel(1.3)),
legend.position = "right"
)
print(p)
p <- ggplot(asd, aes(x=drug, y=weight, color=category)) +
geom_point(size=3) +
geom_segment(aes(xend=drug, yend=0), size=1.6) +
xlab("") + ylab("Mean Relative Loading on factor 5") +
coord_flip() +
guides(color=guide_legend(title="Drug category")) +
theme(
axis.text.y = element_text(size = rel(1.7), color = "black"),
# axis.text.y = element_text(size = rel(1), color = "black"),
axis.text.x = element_text(size = rel(1.7), color = "black", angle=90, hjust=1, vjust=0.5),
# axis.title.y = element_text(size = rel(1.3), margin = margin(0,15,0,0)),
axis.title.x = element_text(size = rel(1.7), margin = margin(15,0,0,0)),
axis.line = element_line(colour = "black", size = 0.75),
axis.ticks = element_line(colour = "black", size = 0.75),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white"),
legend.text = element_text(size=rel(1.2)),
legend.title = element_text(size=rel(1.3)),
legend.position = "right"
)
print(p)
p <- ggplot(asd, aes(x=drug, y=weight, color=category)) +
geom_point(size=3) +
geom_segment(aes(xend=drug, yend=0), size=1.6) +
xlab("") + ylab("Mean Relative Loading on factor 5") +
coord_flip() +
guides(color=guide_legend(title="Drug category")) +
theme(
axis.text.y = element_text(size = rel(1.7), color = "black"),
# axis.text.y = element_text(size = rel(1), color = "black"),
axis.text.x = element_text(size = rel(1.7), color = "black", angle=90, hjust=1, vjust=0.5),
# axis.title.y = element_text(size = rel(1.3), margin = margin(0,15,0,0)),
axis.title.x = element_text(size = rel(1.7), margin = margin(15,0,0,0)),
axis.line = element_line(colour = "black", size = 0.5),
axis.ticks = element_line(colour = "black", size = 0.75),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white"),
legend.text = element_text(size=rel(1.2)),
legend.title = element_text(size=rel(1.3)),
legend.position = "right"
)
print(p)
pdf("/Users/ricard/mofa_cll/stress_factor/out/drug_weights.pdf", width = 8.5, height = 6, useDingbats = F)
print(p)
dev.off()
library(plyr)
library(ggplot2)
res_dir = '/Users/ricard/CLL/scalability'
D = read.table(paste(res_dir, 'results/D.txt', sep='/'), header=FALSE)
M = read.table(paste(res_dir, 'results/M.txt', sep='/'), header=FALSE)
K = read.table(paste(res_dir, 'results/K.txt', sep='/'), header=FALSE)
N = read.table(paste(res_dir, 'results/N.txt', sep='/'), header=FALSE)
D = cbind(D, 'Number of features (D)')
M = cbind(M, 'Number of views (M)')
K = cbind(K, 'Number of factors (K)')
N = cbind(N, 'Number of samples (N)')
colnames(D) = c('val', 'time', 'param')
colnames(M) = c('val', 'time', 'param')
colnames(K) = c('val', 'time', 'param')
colnames(N) = c('val', 'time', 'param')
D = ddply(D, c('val', 'param'), summarise, time_mean=mean(time, na.rm=TRUE), sd=sd(time, na.rm=TRUE))
K = ddply(K, c('val', 'param'), summarise, time_mean=mean(time, na.rm=TRUE), sd=sd(time, na.rm=TRUE))
M = ddply(M, c('val', 'param'), summarise, time_mean=mean(time, na.rm=TRUE), sd=sd(time, na.rm=TRUE))
N = ddply(N, c('val', 'param'), summarise, time_mean=mean(time, na.rm=TRUE), sd=sd(time, na.rm=TRUE))
tmp = rbind(D, M)
tmp = rbind(tmp,  K)
all = rbind(tmp,  N)
sd_error_bars = aes(ymax = time_mean + sd, ymin=time_mean - sd)
p <- ggplot(all, aes(x=val, y=time_mean)) +
geom_errorbar(sd_error_bars, width=.3, position=position_dodge(width=.9), alpha=0.25 ) +
geom_point(alpha=0.7, size=1.1) +
geom_smooth(method='lm', alpha=0.25) +
facet_wrap(~param, scales='free') +
labs(x="", y="Time (sec)") +
theme_bw() +
theme(
axis.title.y = element_text(size=rel(1.7), color="black"),
axis.text=element_text(size=rel(1.0), color='black'),
strip.text = element_text(size=rel(1.1), color="black")
)
print(p)
p
all
library(plyr)
library(ggplot2)
res_dir = '/Users/ricard/MOFA_CLL/scalability'
D = read.table(paste(res_dir, 'results/D.txt', sep='/'), header=FALSE)
M = read.table(paste(res_dir, 'results/M.txt', sep='/'), header=FALSE)
K = read.table(paste(res_dir, 'results/K.txt', sep='/'), header=FALSE)
N = read.table(paste(res_dir, 'results/N.txt', sep='/'), header=FALSE)
D = cbind(D, 'Number of features (D)')
M = cbind(M, 'Number of views (M)')
K = cbind(K, 'Number of factors (K)')
N = cbind(N, 'Number of samples (N)')
colnames(D) = c('val', 'time', 'param')
colnames(M) = c('val', 'time', 'param')
colnames(K) = c('val', 'time', 'param')
colnames(N) = c('val', 'time', 'param')
D = ddply(D, c('val', 'param'), summarise, time_mean=mean(time, na.rm=TRUE), sd=sd(time, na.rm=TRUE))
K = ddply(K, c('val', 'param'), summarise, time_mean=mean(time, na.rm=TRUE), sd=sd(time, na.rm=TRUE))
M = ddply(M, c('val', 'param'), summarise, time_mean=mean(time, na.rm=TRUE), sd=sd(time, na.rm=TRUE))
N = ddply(N, c('val', 'param'), summarise, time_mean=mean(time, na.rm=TRUE), sd=sd(time, na.rm=TRUE))
tmp = rbind(D, M)
tmp = rbind(tmp,  K)
all = rbind(tmp,  N)
sd_error_bars = aes(ymax = time_mean + sd, ymin=time_mean - sd)
library(plyr)
library(ggplot2)
res_dir = '/Users/ricard/MOFA_CLL/scalability'
D = read.table(paste(res_dir, 'in/results/D.txt', sep='/'), header=FALSE)
M = read.table(paste(res_dir, 'in/results/M.txt', sep='/'), header=FALSE)
K = read.table(paste(res_dir, 'in/results/K.txt', sep='/'), header=FALSE)
N = read.table(paste(res_dir, 'in/results/N.txt', sep='/'), header=FALSE)
D = cbind(D, 'Number of features (D)')
M = cbind(M, 'Number of views (M)')
K = cbind(K, 'Number of factors (K)')
N = cbind(N, 'Number of samples (N)')
colnames(D) = c('val', 'time', 'param')
colnames(M) = c('val', 'time', 'param')
colnames(K) = c('val', 'time', 'param')
colnames(N) = c('val', 'time', 'param')
D = ddply(D, c('val', 'param'), summarise, time_mean=mean(time, na.rm=TRUE), sd=sd(time, na.rm=TRUE))
K = ddply(K, c('val', 'param'), summarise, time_mean=mean(time, na.rm=TRUE), sd=sd(time, na.rm=TRUE))
M = ddply(M, c('val', 'param'), summarise, time_mean=mean(time, na.rm=TRUE), sd=sd(time, na.rm=TRUE))
N = ddply(N, c('val', 'param'), summarise, time_mean=mean(time, na.rm=TRUE), sd=sd(time, na.rm=TRUE))
tmp = rbind(D, M)
tmp = rbind(tmp,  K)
all = rbind(tmp,  N)
sd_error_bars = aes(ymax = time_mean + sd, ymin=time_mean - sd)
p <- ggplot(all, aes(x=val, y=time_mean)) +
geom_errorbar(sd_error_bars, width=.3, position=position_dodge(width=.9), alpha=0.25 ) +
geom_point(alpha=0.7, size=1.1) +
geom_smooth(method='lm', alpha=0.25) +
facet_wrap(~param, scales='free') +
labs(x="", y="Time (sec)") +
theme_bw() +
theme(
axis.title.y = element_text(size=rel(1.7), color="black"),
axis.text=element_text(size=rel(1.0), color='black'),
strip.text = element_text(size=rel(1.1), color="black")
)
print(p)
library(plyr)
library(ggplot2)
res_dir = '/Users/ricard/MOFA_CLL/scalability'
D = read.table(paste(res_dir, 'results/D.txt', sep='/'), header=FALSE)
M = read.table(paste(res_dir, 'results/M.txt', sep='/'), header=FALSE)
K = read.table(paste(res_dir, 'results/K.txt', sep='/'), header=FALSE)
N = read.table(paste(res_dir, 'results/N.txt', sep='/'), header=FALSE)
D = cbind(D, 'Number of features (D)')
M = cbind(M, 'Number of views (M)')
K = cbind(K, 'Number of factors (K)')
N = cbind(N, 'Number of samples (N)')
colnames(D) = c('val', 'time', 'param')
colnames(M) = c('val', 'time', 'param')
colnames(K) = c('val', 'time', 'param')
colnames(N) = c('val', 'time', 'param')
D = ddply(D, c('val', 'param'), summarise, time_mean=mean(time, na.rm=TRUE), sd=sd(time, na.rm=TRUE))
K = ddply(K, c('val', 'param'), summarise, time_mean=mean(time, na.rm=TRUE), sd=sd(time, na.rm=TRUE))
M = ddply(M, c('val', 'param'), summarise, time_mean=mean(time, na.rm=TRUE), sd=sd(time, na.rm=TRUE))
N = ddply(N, c('val', 'param'), summarise, time_mean=mean(time, na.rm=TRUE), sd=sd(time, na.rm=TRUE))
tmp = rbind(D, M)
tmp = rbind(tmp,  K)
all = rbind(tmp,  N)
sd_error_bars = aes(ymax = time_mean + sd, ymin=time_mean - sd)
p <- ggplot(all, aes(x=val, y=time_mean)) +
geom_errorbar(sd_error_bars, width=.3, position=position_dodge(width=.9), alpha=0.25 ) +
geom_point(alpha=0.7, size=1.1) +
geom_smooth(method='lm', alpha=0.25) +
facet_wrap(~param, scales='free') +
labs(x="", y="Time (sec)") +
theme_bw() +
theme(
axis.title.y = element_text(size=rel(1.7), color="black"),
axis.text=element_text(size=rel(1.0), color='black'),
strip.text = element_text(size=rel(1.1), color="black")
)
print(p)
p <- ggplot(all, aes(x=val, y=time_mean)) +
# geom_errorbar(sd_error_bars, width=.3, position=position_dodge(width=.9), alpha=0.25 ) +
stat_summary(fun.data = mean_se, geom = "errorbar", width=0.5, alpha=0.5) +
geom_point(alpha=0.7, size=1.1) +
# geom_smooth(method='lm', alpha=0.25) +
facet_wrap(~param, scales='free') +
labs(x="", y="Time (sec)") +
theme_bw() +
theme(
axis.title.y = element_text(size=rel(1.7), color="black"),
axis.text=element_text(size=rel(1.0), color='black'),
strip.text = element_text(size=rel(1.1), color="black")
)
print(p)
all
p <- ggplot(all, aes(x=val, y=time_mean)) +
# geom_errorbar(sd_error_bars, width=.3, position=position_dodge(width=.9), alpha=0.25 ) +
stat_summary(aes(group=val), fun.data = mean_se, geom = "errorbar", width=0.5, alpha=0.5) +
geom_point(alpha=0.7, size=1.1) +
# geom_smooth(method='lm', alpha=0.25) +
facet_wrap(~param, scales='free') +
labs(x="", y="Time (sec)") +
theme_bw() +
theme(
axis.title.y = element_text(size=rel(1.7), color="black"),
axis.text=element_text(size=rel(1.0), color='black'),
strip.text = element_text(size=rel(1.1), color="black")
)
print(p)
head(all)
ntrials <- 5
sd_error_bars = aes(ymax = time_mean + sd/ntrials, ymin=time_mean - sd/ntrials)
p <- ggplot(all, aes(x=val, y=time_mean)) +
geom_errorbar(sd_error_bars, width=.3, position=position_dodge(width=.9), alpha=0.25 ) +
geom_point(alpha=0.7, size=1.1) +
geom_smooth(method='lm', alpha=0.25) +
facet_wrap(~param, scales='free') +
labs(x="", y="Time (sec)") +
theme_bw() +
theme(
axis.title.y = element_text(size=rel(1.7), color="black"),
axis.text=element_text(size=rel(1.0), color='black'),
strip.text = element_text(size=rel(1.1), color="black")
)
print(p)
sd_error_bars = aes(ymax = time_mean + 2*sd/ntrials, ymin=time_mean - 2*sd/ntrials)
p <- ggplot(all, aes(x=val, y=time_mean)) +
geom_errorbar(sd_error_bars, width=.3, position=position_dodge(width=.9), alpha=0.25 ) +
geom_point(alpha=0.7, size=1.1) +
geom_smooth(method='lm', alpha=0.25) +
facet_wrap(~param, scales='free') +
labs(x="", y="Time (sec)") +
theme_bw() +
theme(
axis.title.y = element_text(size=rel(1.7), color="black"),
axis.text=element_text(size=rel(1.0), color='black'),
strip.text = element_text(size=rel(1.1), color="black")
)
print(p)
pdf("/Users/ricard/MOFA_CLL/scalability/out/scalability.pdf")
print(p)
dev.off()
p <- ggplot(all, aes(x=val, y=time_mean)) +
geom_errorbar(sd_error_bars, position=position_dodge(width=.9), alpha=0.25 ) +
geom_point(alpha=0.7, size=1.1) +
geom_smooth(method='lm', alpha=0.25) +
facet_wrap(~param, scales='free') +
labs(x="", y="Time (sec)") +
theme_bw() +
theme(
axis.title.y = element_text(size=rel(1.7), color="black"),
axis.text=element_text(size=rel(1.0), color='black'),
strip.text = element_text(size=rel(1.1), color="black")
)
print(p)
p <- ggplot(all, aes(x=val, y=time_mean)) +
geom_errorbar(sd_error_bars, width=0, position=position_dodge(width=.9), alpha=0.25 ) +
geom_point(alpha=0.7, size=1.1) +
geom_smooth(method='lm', alpha=0.25) +
facet_wrap(~param, scales='free') +
labs(x="", y="Time (sec)") +
theme_bw() +
theme(
axis.title.y = element_text(size=rel(1.7), color="black"),
axis.text=element_text(size=rel(1.0), color='black'),
strip.text = element_text(size=rel(1.1), color="black")
)
print(p)
pdf("/Users/ricard/MOFA_CLL/scalability/out/scalability.pdf")
print(p)
dev.off()
