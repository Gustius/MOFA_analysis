Z <- getFactors(model)
df = data.table(sample = sampleNames(model),
x = Z[,stress_factor],
y = Z[,ighv_factor],
# ighv = patmeta[,IGHV],
# cluster = cut(Z[,stress_factor], breaks=c(-Inf,1.5,Inf), labels=c("Non-stressed","Stressed"))
cluster = as.factor(c("Stressed","Non-stressed")[kmeans(Z[,stress_factor],2)$cluster])
)
# df <- df[complete.cases(df),]
# p <- ggplot(df, aes(x=x ,y=y, color=cluster, shape=ighv)) +
#   geom_point(size=rel(2.0)) +
#   # scale_colour_discrete(name = "IGHV status", labels=c("Unmutated", "Mutated")) +
#   xlab("Stress factor") + ylab("IGHV factor") +
#   scale_shape_discrete(labels=c("Mutated","Unmutated")) +
#   # scale_color_discrete(labels=c("Non-stressed","Stressed")) +
#   guides(shape=guide_legend(title="IGHV status"), color=guide_legend(title="Stress status")) +
#   theme_scatter()
# print(p)
# p <- ggplot(df, aes(x=x ,y=y, color=cluster)) +
#   geom_point(size=rel(2.0)) +
#   # scale_colour_discrete(name = "IGHV status", labels=c("Unmutated", "Mutated")) +
#   xlab("Stress factor") + ylab("IGHV factor") +
#   scale_shape_discrete(labels=c("Mutated","Unmutated")) +
#   # scale_color_discrete(labels=c("Non-stressed","Stressed")) +
#   guides(color=guide_legend(title="Stress status")) +
#   theme_scatter()
# print(p)
# pdf("/Users/ricard/CLL/ricard_analysis/out/stress/scatterplot.pdf", width = 6.5, height = 5, useDingbats = F)
# print(p)
# dev.off()
p <- showAllWeights(model, view="mRNA", factor=stress_factor, nfeatures = "all", abs=T, threshold = 2, main="")
print(p)
# pdf("/Users/ricard/CLL/ricard_analysis/out/stress/all_weights.pdf", width = 6.5, height = 5, useDingbats = F)
# print(p)
# dev.off()
pdf("/Users/ricard/CLL/biology/out/stress/top_weights.pdf", width = 6.5, height = 5, useDingbats = F)
showTopWeights(model, view="mRNA", factor=stress_factor, nfeatures=10, abs=T)
dev.off()
# anno <- df[,c("sample","x","cluster")] %>% .[,x:=-x] %>% tibble::column_to_rownames("sample")
# pdf("/Users/ricard/CLL/biology/out/stress/heatmap_top.pdf", width = 7, height = 4.5, useDingbats = F)
# showDataHeatmap(model, view="mRNA", factor=stress_factor, nfeatures=6, include_weights = F, cluster_cols=F, cluster_rows=F, main="", show_rownames=T, show_colnames=F, annotation_col=anno, transpose=T)
# dev.off()
devtools::load_all("/Users/ricard/mofa/MOFAtools")
library(data.table)
library(purrr)
library(ggplot2)
source("/Users/ricard/MOFA_CLL/stress_factor/utils.R")
p <- showAllWeights(model, view="mRNA", factor=stress_factor, nfeatures = "all", abs=T, threshold = 2, main="")
print(p)
devtools::load_all("/Users/ricard/mofa/MOFAtools")
library(data.table)
library(purrr)
library(ggplot2)
source("/Users/ricard/MOFA_CLL/stress_factor/utils.R")
p <- showAllWeights(model, view="mRNA", factor=stress_factor, nfeatures = "all", abs=T, threshold = 2, main="")
print(p)
print(p + theme_bw())
# data(drugs, package="pace")
load("/Users/ricard/data/CLL/pace/data/drugs.RData")
drugData <- getViab(
file = "/Users/ricard/data/CLL/pace/data/lpdAll.RData",
pat2include = MOFAtools::sampleNames(model),
badDrugs=c("D_008","D_025"),
conc2include = 1:5,
targetedDrugs= c("D_002", "D_003", "D_166", "D_082", "D_079", "D_012", "D_030", "D_063", "D_083") ,
conc4targeted = 1:5,
chemoDrugs = c("D_006", "D_159", "D_010"),
conc4chemo = 1:5,
effectNum = 4,
effectVal = 0.7,
viab = 0.6,
maxval = 1.1,
outdir = "/tmp"
)
# Remove ranges
drugData <- drugData[,!stringr::str_detect(colnames(drugData),":")]
# Extract weights
drugWeights <- getExpectations(model,"SW","E")[["Drugs"]]
rownames(drugWeights) <- paste(drugs[substr(rownames(drugWeights),1,5),"name"], substr(rownames(drugWeights),6,8), sep="")
foo <- reshape2::melt(drugWeights, varnames=c("drugconc", "factor"), value.name="weight") %>% as.data.table
# Scale weights (before taking means)
# foo[,weight:=abs(weight)] %>% .[,weight:=weight/max(weight), by="factor"]
# Extract data
colnames(drugData) <- paste(drugs[substr(colnames(drugData),1,5),"name"], substr(colnames(drugData),6,8), sep="")
bar <- reshape2::melt(drugData, varnames=c("sample", "drugconc"), value.name="viab") %>% as.data.table
# Join
foobar <- merge(foo,bar, by="drugconc", allow.cartesian=TRUE) %>%
.[,drugconc:=as.character(drugconc)] %>%
.[,drug:=sapply(strsplit(drugconc, "_"), function(l) l[1])] %>%
.[,conc:=sapply(strsplit(drugconc, "_"), function(l) l[2])] %>%
.[,category:=drugs$target_category[match(drug, drugs$name)]] %>%
.[,target:=drugs$main_targets[match(drug, drugs$name)]] %>%
.[,pathway:=drugs$pathway[match(drug, drugs$name)]] %>%
setkey(drug)
# Remove missing cases
foobar <- foobar[complete.cases(foobar),]
# Remove uninteresting drugs
foobar <- foobar[!drug %in% c("everolimus","BAY 11-70","SGI-1776","sunitinib","chaetoglobosin A","chaetocin","vorinostat","TAE684","SGX-523","saracatinib","KUâˆ’60019","AZD7762","gefitinib","encorafenib","rabusertib","ibrutinib","spebrutinib","CCT241533","afatinib","PRT06607 HCL")]
# Remove uninteresting pathways
foobar <- foobar[!category %in% c("mTOR","NFkB","PIM","Angiogenesis","Cytoskeleton","Epigenome","ALK","MET","Cell cycle control","Other","HSP90","PI3K/AKT","JAK/STAT")]
foobar$category <- factor(foobar$category, levels=unique(foobar$category))
interesting_drugs1 <- c("SD51","SD07")
# interesting_drugs2 <- c("fludarabine","nutlin-3","doxorubicine")
drugData <- getViab(
file = "/Users/ricard/data/CLL/pace/data/lpdAll.RData",
pat2include = MOFAtools::sampleNames(model),
badDrugs=c("D_008","D_025"),
conc2include = 1:5,
targetedDrugs= c("D_002", "D_003", "D_166", "D_082", "D_079", "D_012", "D_030", "D_063", "D_083") ,
conc4targeted = 1:5,
chemoDrugs = c("D_006", "D_159", "D_010"),
conc4chemo = 1:5,
effectNum = 4,
effectVal = 0.7,
viab = 0.6,
maxval = 1.1,
outdir = "/tmp"
)
drugData <- drugData[,!stringr::str_detect(colnames(drugData),":")]
colnames(drugData) <- paste(drugs[substr(colnames(drugData),1,5),"name"], substr(colnames(drugData),6,8), sep="")
tmp <- reshape2::melt(drugData, varnames=c("sample", "drugconc"), value.name="viab") %>% as.data.table %>%
.[,drugconc:=as.character(drugconc)] %>%
.[,drug:=sapply(strsplit(drugconc, "_"), function(l) l[1])] %>%
.[,conc:=sapply(strsplit(drugconc, "_"), function(l) l[2])] %>%
.[,drugconc:=NULL] %>%
.[drug%in%interesting_drugs1] %>%
merge(df[,c("sample","cluster")], by="sample")
tmp[,conc:=factor(conc,levels=c("5","4","3","2","1"))]
f <- function(x) { return(data.frame(y=mean(x), ymin=mean(x)-sd(x), ymax=mean(x)+sd(x))) }
p <- ggplot(tmp, aes(x=conc, y=viab)) +
stat_summary(aes(group=interaction(drug,cluster), color=cluster), fun.y="mean", geom="line", size=0.75)  +
stat_summary(aes(group=interaction(drug,cluster), color=cluster), fun.data = mean_se, geom = "errorbar", width=0.5, alpha=0.5) +
xlab("Concentration") + ylab("Cellular viability") +
scale_color_manual(values=c("red","blue"), labels=c("HSP low","HSP high")) +
facet_wrap(~drug) +
theme_bw() +
theme(
plot.title = element_text(size=rel(2.0), hjust=0.5),
axis.text = element_text(size = rel(1), color = "black"),
# axis.title = element_text(size = titlesize),
axis.title.y = element_text(size = rel(1.3), margin = margin(0, 15, 0, 0)),
axis.title.x = element_text(size = rel(1.3), margin = margin(15, 0, 0, 0)),
axis.line = element_line(colour = "black", size = 0.5),
axis.ticks = element_line(colour = "black", size = 0.5),
# panel.border = element_blank(),
# panel.grid.major = element_blank(),
# panel.grid.minor = element_blank(),
# panel.background = element_blank(),
legend.key = element_rect(fill = "white"),
legend.position = "right",
strip.text = element_text(size=rel(2.0)),
legend.text = element_text(size = rel(1.2)),
legend.title = element_text(size = rel(1.5))
)
print(p)
pdf("/Users/ricard/CLL/biology/out/stress/drug_curves.pdf", width = 8.5, height = 5, useDingbats = F)
print(p)
dev.off()
interesting_drugs1 <- c("SD51","SD07")
# interesting_drugs2 <- c("fludarabine","nutlin-3","doxorubicine")
drugData <- getViab(
file = "/Users/ricard/data/CLL/pace/data/lpdAll.RData",
pat2include = MOFAtools::sampleNames(model),
badDrugs=c("D_008","D_025"),
conc2include = 1:5,
targetedDrugs= c("D_002", "D_003", "D_166", "D_082", "D_079", "D_012", "D_030", "D_063", "D_083") ,
conc4targeted = 1:5,
chemoDrugs = c("D_006", "D_159", "D_010"),
conc4chemo = 1:5,
effectNum = 4,
effectVal = 0.7,
viab = 0.6,
maxval = 1.1,
outdir = "/tmp"
)
drugData <- drugData[,!stringr::str_detect(colnames(drugData),":")]
colnames(drugData) <- paste(drugs[substr(colnames(drugData),1,5),"name"], substr(colnames(drugData),6,8), sep="")
tmp <- reshape2::melt(drugData, varnames=c("sample", "drugconc"), value.name="viab") %>% as.data.table %>%
.[,drugconc:=as.character(drugconc)] %>%
.[,drug:=sapply(strsplit(drugconc, "_"), function(l) l[1])] %>%
.[,conc:=sapply(strsplit(drugconc, "_"), function(l) l[2])] %>%
.[,drugconc:=NULL] %>%
.[drug%in%interesting_drugs1] %>%
merge(df[,c("sample","cluster")], by="sample")
tmp[,conc:=factor(conc,levels=c("5","4","3","2","1"))]
f <- function(x) { return(data.frame(y=mean(x), ymin=mean(x)-sd(x), ymax=mean(x)+sd(x))) }
p <- ggplot(tmp, aes(x=conc, y=viab)) +
stat_summary(aes(group=interaction(drug,cluster), color=cluster), fun.y="mean", geom="line", size=1.5)  +
stat_summary(aes(group=interaction(drug,cluster), color=cluster), fun.data = mean_se, geom = "errorbar", width=0.5, alpha=0.5) +
xlab("Concentration") + ylab("Cellular viability") +
scale_color_manual(values=c("red","blue"), labels=c("HSP low","HSP high")) +
facet_wrap(~drug) +
theme_bw() +
theme(
plot.title = element_text(size=rel(2.0), hjust=0.5),
axis.text = element_text(size = rel(1), color = "black"),
# axis.title = element_text(size = titlesize),
axis.title.y = element_text(size = rel(1.3), margin = margin(0, 15, 0, 0)),
axis.title.x = element_text(size = rel(1.3), margin = margin(15, 0, 0, 0)),
axis.line = element_line(colour = "black", size = 0.5),
axis.ticks = element_line(colour = "black", size = 0.5),
# panel.border = element_blank(),
# panel.grid.major = element_blank(),
# panel.grid.minor = element_blank(),
# panel.background = element_blank(),
legend.key = element_rect(fill = "white"),
legend.position = "right",
strip.text = element_text(size=rel(2.0)),
legend.text = element_text(size = rel(1.2)),
legend.title = element_text(size = rel(1.5))
)
print(p)
pdf("/Users/ricard/CLL/biology/out/stress/drug_curves.pdf", width = 8.5, height = 5, useDingbats = F)
print(p)
dev.off()
p <- ggplot(tmp, aes(x=conc, y=viab)) +
stat_summary(aes(group=interaction(drug,cluster), color=cluster), fun.y="mean", geom="line", size=1.5)  +
stat_summary(aes(group=interaction(drug,cluster), color=cluster), fun.data = mean_se, geom = "errorbar", width=0.5, alpha=0.5) +
xlab("Concentration") + ylab("Cellular viability") +
scale_color_manual(values=c("red","blue"), labels=c("HSP low","HSP high")) +
scale_y_continuous(expand=c(0.5,0.5)) +
facet_wrap(~drug) +
theme_bw() +
theme(
plot.title = element_text(size=rel(2.0), hjust=0.5),
axis.text = element_text(size = rel(1), color = "black"),
# axis.title = element_text(size = titlesize),
axis.title.y = element_text(size = rel(1.3), margin = margin(0, 15, 0, 0)),
axis.title.x = element_text(size = rel(1.3), margin = margin(15, 0, 0, 0)),
axis.line = element_line(colour = "black", size = 0.5),
axis.ticks = element_line(colour = "black", size = 0.5),
# panel.border = element_blank(),
# panel.grid.major = element_blank(),
# panel.grid.minor = element_blank(),
# panel.background = element_blank(),
legend.key = element_rect(fill = "white"),
legend.position = "right",
strip.text = element_text(size=rel(2.0)),
legend.text = element_text(size = rel(1.2)),
legend.title = element_text(size = rel(1.5))
)
print(p)
interesting_drugs1 <- c("SD51","SD07")
# interesting_drugs2 <- c("fludarabine","nutlin-3","doxorubicine")
drugData <- getViab(
file = "/Users/ricard/data/CLL/pace/data/lpdAll.RData",
pat2include = MOFAtools::sampleNames(model),
badDrugs=c("D_008","D_025"),
conc2include = 1:5,
targetedDrugs= c("D_002", "D_003", "D_166", "D_082", "D_079", "D_012", "D_030", "D_063", "D_083") ,
conc4targeted = 1:5,
chemoDrugs = c("D_006", "D_159", "D_010"),
conc4chemo = 1:5,
effectNum = 4,
effectVal = 0.7,
viab = 0.6,
maxval = 1.1,
outdir = "/tmp"
)
drugData <- drugData[,!stringr::str_detect(colnames(drugData),":")]
colnames(drugData) <- paste(drugs[substr(colnames(drugData),1,5),"name"], substr(colnames(drugData),6,8), sep="")
tmp <- reshape2::melt(drugData, varnames=c("sample", "drugconc"), value.name="viab") %>% as.data.table %>%
.[,drugconc:=as.character(drugconc)] %>%
.[,drug:=sapply(strsplit(drugconc, "_"), function(l) l[1])] %>%
.[,conc:=sapply(strsplit(drugconc, "_"), function(l) l[2])] %>%
.[,drugconc:=NULL] %>%
.[drug%in%interesting_drugs1] %>%
merge(df[,c("sample","cluster")], by="sample")
tmp[,conc:=factor(conc,levels=c("5","4","3","2","1"))]
f <- function(x) { return(data.frame(y=mean(x), ymin=mean(x)-sd(x), ymax=mean(x)+sd(x))) }
p <- ggplot(tmp, aes(x=conc, y=viab)) +
stat_summary(aes(group=interaction(drug,cluster), color=cluster), fun.y="mean", geom="line", size=1.5)  +
stat_summary(aes(group=interaction(drug,cluster), color=cluster), fun.data = mean_se, geom = "errorbar", width=0.5, alpha=0.5) +
xlab("Concentration") + ylab("Cellular viability") +
scale_color_manual(values=c("red","blue"), labels=c("HSP low","HSP high")) +
scale_y_continuous(expand=c(0.02,0.02)) +
facet_wrap(~drug) +
theme_bw() +
theme(
plot.title = element_text(size=rel(2.0), hjust=0.5),
axis.text = element_text(size = rel(1), color = "black"),
# axis.title = element_text(size = titlesize),
axis.title.y = element_text(size = rel(1.3), margin = margin(0, 15, 0, 0)),
axis.title.x = element_text(size = rel(1.3), margin = margin(15, 0, 0, 0)),
axis.line = element_line(colour = "black", size = 0.5),
axis.ticks = element_line(colour = "black", size = 0.5),
# panel.border = element_blank(),
# panel.grid.major = element_blank(),
# panel.grid.minor = element_blank(),
# panel.background = element_blank(),
legend.key = element_rect(fill = "white"),
legend.position = "right",
strip.text = element_text(size=rel(2.0)),
legend.text = element_text(size = rel(1.2)),
legend.title = element_text(size = rel(1.5))
)
print(p)
pdf("/Users/ricard/CLL/biology/out/stress/drug_curves.pdf", width = 8.5, height = 5, useDingbats = F)
print(p)
dev.off()
interesting_drugs1 <- c("SD51","SD07")
# interesting_drugs2 <- c("fludarabine","nutlin-3","doxorubicine")
drugData <- getViab(
file = "/Users/ricard/data/CLL/pace/data/lpdAll.RData",
pat2include = MOFAtools::sampleNames(model),
badDrugs=c("D_008","D_025"),
conc2include = 1:5,
targetedDrugs= c("D_002", "D_003", "D_166", "D_082", "D_079", "D_012", "D_030", "D_063", "D_083") ,
conc4targeted = 1:5,
chemoDrugs = c("D_006", "D_159", "D_010"),
conc4chemo = 1:5,
effectNum = 4,
effectVal = 0.7,
viab = 0.6,
maxval = 1.1,
outdir = "/tmp"
)
drugData <- drugData[,!stringr::str_detect(colnames(drugData),":")]
colnames(drugData) <- paste(drugs[substr(colnames(drugData),1,5),"name"], substr(colnames(drugData),6,8), sep="")
tmp <- reshape2::melt(drugData, varnames=c("sample", "drugconc"), value.name="viab") %>% as.data.table %>%
.[,drugconc:=as.character(drugconc)] %>%
.[,drug:=sapply(strsplit(drugconc, "_"), function(l) l[1])] %>%
.[,conc:=sapply(strsplit(drugconc, "_"), function(l) l[2])] %>%
.[,drugconc:=NULL] %>%
.[drug%in%interesting_drugs1] %>%
merge(df[,c("sample","cluster")], by="sample")
tmp[,conc:=factor(conc,levels=c("5","4","3","2","1"))]
f <- function(x) { return(data.frame(y=mean(x), ymin=mean(x)-sd(x), ymax=mean(x)+sd(x))) }
p <- ggplot(tmp, aes(x=conc, y=viab)) +
stat_summary(aes(group=interaction(drug,cluster), color=cluster), fun.y="mean", geom="line", size=1.5)  +
stat_summary(aes(group=interaction(drug,cluster), color=cluster), fun.data = mean_se, geom = "errorbar", width=0.5, alpha=0.5) +
xlab("Concentration") + ylab("Cellular viability") +
scale_color_manual(values=c("red","blue"), labels=c("HSP low","HSP high")) +
scale_y_continuous(expand=c(0.05,0.05)) +
facet_wrap(~drug) +
theme_bw() +
theme(
plot.title = element_text(size=rel(2.0), hjust=0.5),
axis.text = element_text(size = rel(1), color = "black"),
# axis.title = element_text(size = titlesize),
axis.title.y = element_text(size = rel(1.3), margin = margin(0, 15, 0, 0)),
axis.title.x = element_text(size = rel(1.3), margin = margin(15, 0, 0, 0)),
axis.line = element_line(colour = "black", size = 0.5),
axis.ticks = element_line(colour = "black", size = 0.5),
# panel.border = element_blank(),
# panel.grid.major = element_blank(),
# panel.grid.minor = element_blank(),
# panel.background = element_blank(),
legend.key = element_rect(fill = "white"),
legend.position = "right",
strip.text = element_text(size=rel(2.0)),
legend.text = element_text(size = rel(1.2)),
legend.title = element_text(size = rel(1.5))
)
print(p)
pdf("/Users/ricard/CLL/biology/out/stress/drug_curves.pdf", width = 8.5, height = 5, useDingbats = F)
print(p)
dev.off()
interesting_drugs1 <- c("SD51","SD07")
# interesting_drugs2 <- c("fludarabine","nutlin-3","doxorubicine")
drugData <- getViab(
file = "/Users/ricard/data/CLL/pace/data/lpdAll.RData",
pat2include = MOFAtools::sampleNames(model),
badDrugs=c("D_008","D_025"),
conc2include = 1:5,
targetedDrugs= c("D_002", "D_003", "D_166", "D_082", "D_079", "D_012", "D_030", "D_063", "D_083") ,
conc4targeted = 1:5,
chemoDrugs = c("D_006", "D_159", "D_010"),
conc4chemo = 1:5,
effectNum = 4,
effectVal = 0.7,
viab = 0.6,
maxval = 1.1,
outdir = "/tmp"
)
drugData <- drugData[,!stringr::str_detect(colnames(drugData),":")]
colnames(drugData) <- paste(drugs[substr(colnames(drugData),1,5),"name"], substr(colnames(drugData),6,8), sep="")
tmp <- reshape2::melt(drugData, varnames=c("sample", "drugconc"), value.name="viab") %>% as.data.table %>%
.[,drugconc:=as.character(drugconc)] %>%
.[,drug:=sapply(strsplit(drugconc, "_"), function(l) l[1])] %>%
.[,conc:=sapply(strsplit(drugconc, "_"), function(l) l[2])] %>%
.[,drugconc:=NULL] %>%
.[drug%in%interesting_drugs1] %>%
merge(df[,c("sample","cluster")], by="sample")
tmp[,conc:=factor(conc,levels=c("5","4","3","2","1"))]
f <- function(x) { return(data.frame(y=mean(x), ymin=mean(x)-sd(x), ymax=mean(x)+sd(x))) }
p <- ggplot(tmp, aes(x=conc, y=viab)) +
stat_summary(aes(group=interaction(drug,cluster), color=cluster), fun.y="mean", geom="line", size=1.5)  +
stat_summary(aes(group=interaction(drug,cluster), color=cluster), fun.data = mean_se, geom = "errorbar", width=0.5, alpha=0.5) +
xlab("Concentration") + ylab("Cellular viability") +
scale_color_manual(values=c("red","blue"), labels=c("HSP low","HSP high")) +
scale_y_continuous(expand=c(0.01,0.05)) +
facet_wrap(~drug) +
theme_bw() +
theme(
plot.title = element_text(size=rel(2.0), hjust=0.5),
axis.text = element_text(size = rel(1), color = "black"),
# axis.title = element_text(size = titlesize),
axis.title.y = element_text(size = rel(1.3), margin = margin(0, 15, 0, 0)),
axis.title.x = element_text(size = rel(1.3), margin = margin(15, 0, 0, 0)),
axis.line = element_line(colour = "black", size = 0.5),
axis.ticks = element_line(colour = "black", size = 0.5),
# panel.border = element_blank(),
# panel.grid.major = element_blank(),
# panel.grid.minor = element_blank(),
# panel.background = element_blank(),
legend.key = element_rect(fill = "white"),
legend.position = "right",
strip.text = element_text(size=rel(2.0)),
legend.text = element_text(size = rel(1.2)),
legend.title = element_text(size = rel(1.5))
)
print(p)
pdf("/Users/ricard/CLL/biology/out/stress/drug_curves.pdf", width = 8.5, height = 5, useDingbats = F)
print(p)
dev.off()
interesting_drugs1 <- c("SD51","SD07")
# interesting_drugs2 <- c("fludarabine","nutlin-3","doxorubicine")
drugData <- getViab(
file = "/Users/ricard/data/CLL/pace/data/lpdAll.RData",
pat2include = MOFAtools::sampleNames(model),
badDrugs=c("D_008","D_025"),
conc2include = 1:5,
targetedDrugs= c("D_002", "D_003", "D_166", "D_082", "D_079", "D_012", "D_030", "D_063", "D_083") ,
conc4targeted = 1:5,
chemoDrugs = c("D_006", "D_159", "D_010"),
conc4chemo = 1:5,
effectNum = 4,
effectVal = 0.7,
viab = 0.6,
maxval = 1.1,
outdir = "/tmp"
)
drugData <- drugData[,!stringr::str_detect(colnames(drugData),":")]
colnames(drugData) <- paste(drugs[substr(colnames(drugData),1,5),"name"], substr(colnames(drugData),6,8), sep="")
tmp <- reshape2::melt(drugData, varnames=c("sample", "drugconc"), value.name="viab") %>% as.data.table %>%
.[,drugconc:=as.character(drugconc)] %>%
.[,drug:=sapply(strsplit(drugconc, "_"), function(l) l[1])] %>%
.[,conc:=sapply(strsplit(drugconc, "_"), function(l) l[2])] %>%
.[,drugconc:=NULL] %>%
.[drug%in%interesting_drugs1] %>%
merge(df[,c("sample","cluster")], by="sample")
tmp[,conc:=factor(conc,levels=c("5","4","3","2","1"))]
f <- function(x) { return(data.frame(y=mean(x), ymin=mean(x)-sd(x), ymax=mean(x)+sd(x))) }
p <- ggplot(tmp, aes(x=conc, y=viab)) +
stat_summary(aes(group=interaction(drug,cluster), color=cluster), fun.y="mean", geom="line", size=1.5)  +
stat_summary(aes(group=interaction(drug,cluster), color=cluster), fun.data = mean_se, geom = "errorbar", width=0.5, alpha=0.5) +
xlab("Concentration") + ylab("Cellular viability") +
scale_color_manual(values=c("red","blue"), labels=c("HSP low","HSP high")) +
scale_y_continuous(expand=c(0.00,0.05)) +
facet_wrap(~drug) +
theme_bw() +
theme(
plot.title = element_text(size=rel(2.0), hjust=0.5),
axis.text = element_text(size = rel(1), color = "black"),
# axis.title = element_text(size = titlesize),
axis.title.y = element_text(size = rel(1.3), margin = margin(0, 15, 0, 0)),
axis.title.x = element_text(size = rel(1.3), margin = margin(15, 0, 0, 0)),
axis.line = element_line(colour = "black", size = 0.5),
axis.ticks = element_line(colour = "black", size = 0.5),
# panel.border = element_blank(),
# panel.grid.major = element_blank(),
# panel.grid.minor = element_blank(),
# panel.background = element_blank(),
legend.key = element_rect(fill = "white"),
legend.position = "right",
strip.text = element_text(size=rel(2.0)),
legend.text = element_text(size = rel(1.2)),
legend.title = element_text(size = rel(1.5))
)
print(p)
pdf("/Users/ricard/CLL/biology/out/stress/drug_curves.pdf", width = 8.5, height = 5, useDingbats = F)
print(p)
dev.off()
devtools::load_all("/Users/ricard/mofa/MOFAtools")
p <- showAllWeights(model, view="mRNA", factor=stress_factor, nfeatures = "all", abs=T, threshold = 2, main="")
print(p)
print(p + theme_bw())
?theme_bw
```{r, echo=FALSE, message=FALSE, warning=FALSE}
devtools::load_all("/Users/ricard/mofa/MOFAtools")
p <- showAllWeights(model, view="mRNA", factor=stress_factor, nfeatures = "all", abs=T, threshold = 2, main="")
print(p)
devtools::load_all("/Users/ricard/mofa/MOFAtools")
p <- showAllWeights(model, view="mRNA", factor=stress_factor, nfeatures = "all", abs=T, threshold = 2, main="")
print(p)
devtools::load_all("/Users/ricard/mofa/MOFAtools")
p <- showAllWeights(model, view="mRNA", factor=stress_factor, nfeatures = "all", abs=T, threshold = 2, main="")
print(p)
devtools::load_all("/Users/ricard/mofa/MOFAtools")
p <- showAllWeights(model, view="mRNA", factor=stress_factor, nfeatures = "all", abs=T, threshold = 2, main="")
print(p)
devtools::load_all("/Users/ricard/mofa/MOFAtools")
p <- showAllWeights(model, view="mRNA", factor=stress_factor, nfeatures = "all", abs=T, threshold = 2, main="")
print(p)
devtools::load_all("/Users/ricard/mofa/MOFAtools")
p <- showAllWeights(model, view="mRNA", factor=stress_factor, nfeatures = "all", abs=T, threshold = 2, main="")
print(p)
pdf("/Users/ricard/CLL/ricard_analysis/out/stress/all_weights.pdf", width = 6.5, height = 5, useDingbats = F)
pdf("/Users/ricard/CLL/biology/out/stress/all_weights.pdf", width = 6.5, height = 5, useDingbats = F)
print(p)
dev.off()
print(p)
devtools::load_all("/Users/ricard/mofa/MOFAtools")
p <- showAllWeights(model, view="mRNA", factor=stress_factor, nfeatures = "all", abs=T, threshold = 2, main="")
print(p)
devtools::load_all("/Users/ricard/mofa/MOFAtools")
p <- showAllWeights(model, view="mRNA", factor=stress_factor, nfeatures = "all", abs=T, threshold = 2, main="")
print(p)
pdf("/Users/ricard/CLL/biology/out/stress/all_weights.pdf", width = 6.5, height = 5, useDingbats = F)
print(p)
dev.off()
